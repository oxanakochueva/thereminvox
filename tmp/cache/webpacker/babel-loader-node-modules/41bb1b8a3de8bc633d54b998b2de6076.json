{"ast":null,"code":"import Tone from 'tone';\n\nfunction toneSynth() {\n  return new Tone.Synth({\n    oscillator: {\n      type: 'triangle'\n    },\n    envelope: {\n      attack: 0.005,\n      decay: 0.1,\n      sustain: 0.3,\n      release: 1\n    }\n  });\n}\n\nfunction polySynth() {\n  return new Tone.PolySynth(1, Tone.Synth, {\n    oscillator: {\n      type: 'fatsawtooth',\n      count: 3,\n      spread: 30,\n      phase: 10,\n      fadeIn: 4\n    },\n    envelope: {\n      attack: 0.3,\n      decay: 1,\n      sustain: 1,\n      release: 5,\n      attackCurve: 'exponential'\n    }\n  });\n} // let synth1 = new Tone.PolySynth(1, Tone.Synth, {\n//   oscillator: {\n//     // fatsawtooth\n//     type: 'fatsawtooth',\n//     count: 3,\n//     spread: 30,\n//     phase: 10\n//     // fadeIn: 4\n//   },\n//   envelope: {\n//     attack: 1,\n//     decay: 1,\n//     sustain: 1,\n//     release: 5,\n//     attackCurve: 'exponential'\n//   }\n// })\n//\n// let synth2 = new Tone.PolySynth(1, Tone.Synth, {\n//   oscillator: {\n//     // fatsawtooth\n//     type: 'sine'\n//     // count: 1,\n//     // spread: 30\n//     // phase: 10\n//     // fadeIn: 4\n//   },\n//   envelope: {\n//     attack: 0.3,\n//     decay: 1,\n//     sustain: 1,\n//     release: 5,\n//     attackCurve: 'exponential'\n//   }\n// })\n//\n// let synth3 = new Tone.PolySynth(1, Tone.Synth, {\n//   oscillator: {\n//     // fatsawtooth\n//     type: 'square'\n//     // count: 1,\n//     // spread: 30\n//     // phase: 10\n//     // fadeIn: 4\n//   },\n//   envelope: {\n//     attack: 0.3,\n//     decay: 0.1,\n//     sustain: 0.3,\n//     release: 1,\n//     attackCurve: 'exponential'\n//   }\n// })\n//\n// let synth4 = new Tone.Synth({\n//   oscillator: {\n//     type: 'triangle'\n//   },\n//   envelope: {\n//     attack: 0.005,\n//     decay: 0.1,\n//     sustain: 0.3,\n//     release: 1\n//   }\n// })\n//\n// export { synth1, synth2, synth3, synth4 }\n\n\nexport { toneSynth, polySynth };","map":{"version":3,"sources":["/Users/oxana/thereminvox/app/javascript/components/tunes/synths.jsx"],"names":["Tone","toneSynth","Synth","oscillator","type","envelope","attack","decay","sustain","release","polySynth","PolySynth","count","spread","phase","fadeIn","attackCurve"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAEA,SAASC,SAAT,GAAqB;AACnB,SAAO,IAAID,IAAI,CAACE,KAAT,CAAe;AACpBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AADI,KADQ;AAIpBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,KADA;AAERC,MAAAA,KAAK,EAAE,GAFC;AAGRC,MAAAA,OAAO,EAAE,GAHD;AAIRC,MAAAA,OAAO,EAAE;AAJD;AAJU,GAAf,CAAP;AAWD;;AAED,SAASC,SAAT,GAAqB;AACnB,SAAO,IAAIV,IAAI,CAACW,SAAT,CAAmB,CAAnB,EAAsBX,IAAI,CAACE,KAA3B,EAAkC;AACvCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,aADI;AAEVQ,MAAAA,KAAK,EAAE,CAFG;AAGVC,MAAAA,MAAM,EAAE,EAHE;AAIVC,MAAAA,KAAK,EAAE,EAJG;AAKVC,MAAAA,MAAM,EAAE;AALE,KAD2B;AAQvCV,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,GADA;AAERC,MAAAA,KAAK,EAAE,CAFC;AAGRC,MAAAA,OAAO,EAAE,CAHD;AAIRC,MAAAA,OAAO,EAAE,CAJD;AAKRO,MAAAA,WAAW,EAAE;AALL;AAR6B,GAAlC,CAAP;AAgBD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASf,SAAT,EAAoBS,SAApB","sourcesContent":["import Tone from 'tone'\n\nfunction toneSynth() {\n  return new Tone.Synth({\n    oscillator: {\n      type: 'triangle'\n    },\n    envelope: {\n      attack: 0.005,\n      decay: 0.1,\n      sustain: 0.3,\n      release: 1\n    }\n  })\n}\n\nfunction polySynth() {\n  return new Tone.PolySynth(1, Tone.Synth, {\n    oscillator: {\n      type: 'fatsawtooth',\n      count: 3,\n      spread: 30,\n      phase: 10,\n      fadeIn: 4\n    },\n    envelope: {\n      attack: 0.3,\n      decay: 1,\n      sustain: 1,\n      release: 5,\n      attackCurve: 'exponential'\n    }\n  })\n}\n\n// let synth1 = new Tone.PolySynth(1, Tone.Synth, {\n//   oscillator: {\n//     // fatsawtooth\n//     type: 'fatsawtooth',\n//     count: 3,\n//     spread: 30,\n//     phase: 10\n//     // fadeIn: 4\n//   },\n//   envelope: {\n//     attack: 1,\n//     decay: 1,\n//     sustain: 1,\n//     release: 5,\n//     attackCurve: 'exponential'\n//   }\n// })\n//\n// let synth2 = new Tone.PolySynth(1, Tone.Synth, {\n//   oscillator: {\n//     // fatsawtooth\n//     type: 'sine'\n//     // count: 1,\n//     // spread: 30\n//     // phase: 10\n//     // fadeIn: 4\n//   },\n//   envelope: {\n//     attack: 0.3,\n//     decay: 1,\n//     sustain: 1,\n//     release: 5,\n//     attackCurve: 'exponential'\n//   }\n// })\n//\n// let synth3 = new Tone.PolySynth(1, Tone.Synth, {\n//   oscillator: {\n//     // fatsawtooth\n//     type: 'square'\n//     // count: 1,\n//     // spread: 30\n//     // phase: 10\n//     // fadeIn: 4\n//   },\n//   envelope: {\n//     attack: 0.3,\n//     decay: 0.1,\n//     sustain: 0.3,\n//     release: 1,\n//     attackCurve: 'exponential'\n//   }\n// })\n//\n// let synth4 = new Tone.Synth({\n//   oscillator: {\n//     type: 'triangle'\n//   },\n//   envelope: {\n//     attack: 0.005,\n//     decay: 0.1,\n//     sustain: 0.3,\n//     release: 1\n//   }\n// })\n//\n// export { synth1, synth2, synth3, synth4 }\n\nexport { toneSynth, polySynth }\n"]},"metadata":{},"sourceType":"module"}