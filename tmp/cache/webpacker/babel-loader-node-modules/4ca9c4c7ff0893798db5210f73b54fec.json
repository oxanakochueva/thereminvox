{"ast":null,"code":"import Tone from 'tone';\n\nfunction autoFilter() {\n  var f = new Tone.AutoFilter({\n    frequency: 1,\n    type: 'sine',\n    depth: 1,\n    baseFrequency: 200,\n    octaves: 2.6,\n    filter: {\n      type: 'lowpass',\n      rolloff: -12,\n      Q: 1\n    }\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction autoPanner() {\n  var f = new Tone.AutoPanner({\n    frequency: 1,\n    type: 'sine',\n    depth: 1\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction autoWah() {\n  var f = new Tone.AutoWah({\n    baseFrequency: 100,\n    octaves: 6,\n    sensitivity: 0,\n    Q: 2,\n    gain: 2,\n    follower: {\n      attack: 0.3,\n      release: 0.5\n    }\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction bitCrusher() {\n  var f = new Tone.BitCrusher({\n    bits: 4\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction chebyshev() {\n  var f = new Tone.Chebyshev({\n    order: 50,\n    oversample: 'none'\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction chorus() {\n  var f = new Tone.Chorus({\n    frequency: 1.5,\n    delayTime: 3.5,\n    depth: 0.7,\n    type: 'sine',\n    spread: 180\n  });\n  f.wet.value = 0;\n  return f;\n} // function convolver() {\n//   let f = new Tone.Convolver({\n//     onload: Tone.noOp,\n//     normalize: true\n//   })\n//\n//   f.wet.value = 0\n//\n//   return f\n// }\n\n\nfunction distortion() {\n  var f = new Tone.Distortion({\n    distortion: 0,\n    oversample: '4x'\n  });\n  f.wet.value = 0;\n  return f;\n} // let effect = new Tone.Effect({\n//   wet: 1\n// })\n\n\nfunction feedbackDelay() {\n  var f = new Tone.FeedbackDelay({\n    delayTime: '4n',\n    maxDelay: 0.8\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction feedbackEffect() {\n  var f = new Tone.FeedbackEffect({\n    feedback: 0.125\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction freeverb() {\n  var f = new Tone.Freeverb({\n    roomSize: 0.7,\n    dampening: 3000\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction jcReverb() {\n  var f = new Tone.JCReverb({\n    roomSize: 0.5\n  });\n  f.wet.value = 0;\n  return f;\n} // MidSideEffect ???\n\n\nfunction phaser() {\n  var f = new Tone.Phaser({\n    frequency: 0.5,\n    octaves: 3,\n    stages: 10,\n    Q: 10,\n    baseFrequency: 350\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction pingPongDelay() {\n  var f = new Tone.PingPongDelay({\n    delayTime: 0.25,\n    maxDelayTime: 1\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction pitchShift() {\n  var f = new Tone.PitchShift({\n    pitch: 0,\n    windowSize: 0.1,\n    delayTime: 0,\n    feedback: 0\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction reverb() {\n  var f = new Tone.Reverb({\n    decay: 1.5,\n    preDelay: 0.01\n  });\n  f.wet.value = 0;\n  return f;\n} // StereoEffect ???\n// StereoFeedbackEffect ???\n\n\nfunction stereoWidener() {\n  var f = new Tone.StereoWidener({\n    width: 0.5\n  });\n  f.wet.value = 0;\n  return f;\n} // StereoXFeedbackEffect ???\n\n\nfunction tremolo() {\n  var f = new Tone.Tremolo({\n    frequency: 10,\n    type: 'sine',\n    depth: 0.5,\n    spread: 180\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction vibrato() {\n  var f = new Tone.Vibrato({\n    maxDelay: 0.005,\n    frequency: 5,\n    depth: 0.1,\n    type: 'sine'\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nexport { autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, distortion, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato };","map":{"version":3,"sources":["/Users/oxana/thereminvox/app/javascript/components/tunes/effects.jsx"],"names":["Tone","autoFilter","f","AutoFilter","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","wet","value","autoPanner","AutoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","BitCrusher","bits","chebyshev","Chebyshev","order","oversample","chorus","Chorus","delayTime","spread","distortion","Distortion","feedbackDelay","FeedbackDelay","maxDelay","feedbackEffect","FeedbackEffect","feedback","freeverb","Freeverb","roomSize","dampening","jcReverb","JCReverb","phaser","Phaser","stages","pingPongDelay","PingPongDelay","maxDelayTime","pitchShift","PitchShift","pitch","windowSize","reverb","Reverb","decay","preDelay","stereoWidener","StereoWidener","width","tremolo","Tremolo","vibrato","Vibrato"],"mappings":"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","sourcesContent":["import Tone from 'tone'\n\nfunction autoFilter() {\n  let f = new Tone.AutoFilter({\n    frequency: 1,\n    type: 'sine',\n    depth: 1,\n    baseFrequency: 200,\n    octaves: 2.6,\n    filter: {\n      type: 'lowpass',\n      rolloff: -12,\n      Q: 1\n    }\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction autoPanner() {\n  let f = new Tone.AutoPanner({\n    frequency: 1,\n    type: 'sine',\n    depth: 1\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction autoWah() {\n  let f = new Tone.AutoWah({\n    baseFrequency: 100,\n    octaves: 6,\n    sensitivity: 0,\n    Q: 2,\n    gain: 2,\n    follower: {\n      attack: 0.3,\n      release: 0.5\n    }\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction bitCrusher() {\n  let f = new Tone.BitCrusher({\n    bits: 4\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction chebyshev() {\n  let f = new Tone.Chebyshev({\n    order: 50,\n    oversample: 'none'\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction chorus() {\n  let f = new Tone.Chorus({\n    frequency: 1.5,\n    delayTime: 3.5,\n    depth: 0.7,\n    type: 'sine',\n    spread: 180\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\n// function convolver() {\n//   let f = new Tone.Convolver({\n//     onload: Tone.noOp,\n//     normalize: true\n//   })\n//\n//   f.wet.value = 0\n//\n//   return f\n// }\n\nfunction distortion() {\n  let f = new Tone.Distortion({\n    distortion: 0,\n    oversample: '4x'\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\n// let effect = new Tone.Effect({\n//   wet: 1\n// })\n\nfunction feedbackDelay() {\n  let f = new Tone.FeedbackDelay({\n    delayTime: '4n',\n    maxDelay: 0.8\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction feedbackEffect() {\n  let f = new Tone.FeedbackEffect({\n    feedback: 0.125\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction freeverb() {\n  let f = new Tone.Freeverb({\n    roomSize: 0.7,\n    dampening: 3000\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction jcReverb() {\n  let f = new Tone.JCReverb({\n    roomSize: 0.5\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\n// MidSideEffect ???\n\nfunction phaser() {\n  let f = new Tone.Phaser({\n    frequency: 0.5,\n    octaves: 3,\n    stages: 10,\n    Q: 10,\n    baseFrequency: 350\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction pingPongDelay() {\n  let f = new Tone.PingPongDelay({\n    delayTime: 0.25,\n    maxDelayTime: 1\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction pitchShift() {\n  let f = new Tone.PitchShift({\n    pitch: 0,\n    windowSize: 0.1,\n    delayTime: 0,\n    feedback: 0\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction reverb() {\n  let f = new Tone.Reverb({\n    decay: 1.5,\n    preDelay: 0.01\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\n// StereoEffect ???\n// StereoFeedbackEffect ???\n\nfunction stereoWidener() {\n  let f = new Tone.StereoWidener({\n    width: 0.5\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\n// StereoXFeedbackEffect ???\n\nfunction tremolo() {\n  let f = new Tone.Tremolo({\n    frequency: 10,\n    type: 'sine',\n    depth: 0.5,\n    spread: 180\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction vibrato() {\n  let f = new Tone.Vibrato({\n    maxDelay: 0.005,\n    frequency: 5,\n    depth: 0.1,\n    type: 'sine'\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nexport {\n  autoFilter,\n  autoPanner,\n  autoWah,\n  bitCrusher,\n  chebyshev,\n  chorus,\n  distortion,\n  feedbackDelay,\n  feedbackEffect,\n  freeverb,\n  jcReverb,\n  phaser,\n  pingPongDelay,\n  pitchShift,\n  reverb,\n  stereoWidener,\n  tremolo,\n  vibrato\n}\n"]},"metadata":{},"sourceType":"module"}