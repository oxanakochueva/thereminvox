{"ast":null,"code":"var _jsxFileName = \"/Users/oxana/thereminvox/app/javascript/containers/Hello.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport Menubar from '../components/Menubar';\n\nvar Hello =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Hello, _React$Component);\n\n  function Hello(props) {\n    var _this;\n\n    _classCallCheck(this, Hello);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Hello).call(this, props));\n    _this.state = {\n      avatar: {\n        color: 'red'\n      },\n      button: {\n        color: 'red'\n      }\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Hello, [{\n    key: \"handleClick\",\n    value: function handleClick(elementName) {\n      if (elementName == 'avatar') {\n        var avatarColor = this.state.avatar.color == 'red' ? 'blue' : 'red';\n        this.setState({\n          avatar: {\n            color: avatarColor\n          }\n        });\n      } else if (elementName == 'button') {\n        var buttonColor = this.state.button.color == 'red' ? 'blue' : 'red';\n        this.setState({\n          button: {\n            color: buttonColor\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var name = this.props.name;\n      var _this$state = this.state,\n          avatar = _this$state.avatar,\n          button = _this$state.button;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Hello \", name, \"!\", React.createElement(Menubar, {\n        name: name,\n        avatar: avatar,\n        button: button,\n        handleClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Hello;\n}(React.Component);\n\nexport { Hello as default };","map":{"version":3,"sources":["/Users/oxana/thereminvox/app/javascript/containers/Hello.jsx"],"names":["React","Menubar","Hello","props","state","avatar","color","button","handleClick","bind","elementName","avatarColor","setState","buttonColor","name","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;IAEqBC,K;;;;;AACnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE;AADD,OADG;AAIXC,MAAAA,MAAM,EAAE;AACND,QAAAA,KAAK,EAAE;AADD;AAJG,KAAb;AASA,UAAKE,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAZiB;AAalB;;;;gCAEWC,W,EAAa;AACvB,UAAIA,WAAW,IAAI,QAAnB,EAA6B;AAC3B,YAAMC,WAAW,GAAG,KAAKP,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,IAA2B,KAA3B,GAAmC,MAAnC,GAA4C,KAAhE;AACA,aAAKM,QAAL,CAAc;AACZP,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAEK;AADD;AADI,SAAd;AAKD,OAPD,MAOO,IAAID,WAAW,IAAI,QAAnB,EAA6B;AAClC,YAAMG,WAAW,GAAG,KAAKT,KAAL,CAAWG,MAAX,CAAkBD,KAAlB,IAA2B,KAA3B,GAAmC,MAAnC,GAA4C,KAAhE;AACA,aAAKM,QAAL,CAAc;AACZL,UAAAA,MAAM,EAAE;AACND,YAAAA,KAAK,EAAEO;AADD;AADI,SAAd;AAKD;AACF;;;6BAEQ;AAAA,UACCC,IADD,GACU,KAAKX,KADf,CACCW,IADD;AAAA,wBAEoB,KAAKV,KAFzB;AAAA,UAECC,MAFD,eAECA,MAFD;AAAA,UAESE,MAFT,eAESA,MAFT;AAIP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACSO,IADT,OAEE,oBAAC,OAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,MAAM,EAAET,MAFV;AAGE,QAAA,MAAM,EAAEE,MAHV;AAIE,QAAA,WAAW,EAAE,KAAKC,WAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAWD;;;;EAjDgCR,KAAK,CAACe,S;;SAApBb,K","sourcesContent":["import React from 'react'\nimport Menubar from '../components/Menubar'\n\nexport default class Hello extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      avatar: {\n        color: 'red'\n      },\n      button: {\n        color: 'red'\n      }\n    }\n\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick(elementName) {\n    if (elementName == 'avatar') {\n      const avatarColor = this.state.avatar.color == 'red' ? 'blue' : 'red'\n      this.setState({\n        avatar: {\n          color: avatarColor\n        }\n      })\n    } else if (elementName == 'button') {\n      const buttonColor = this.state.button.color == 'red' ? 'blue' : 'red'\n      this.setState({\n        button: {\n          color: buttonColor\n        }\n      })\n    }\n  }\n\n  render() {\n    const { name } = this.props\n    const { avatar, button } = this.state\n\n    return (\n      <div>\n        Hello {name}!\n        <Menubar\n          name={name}\n          avatar={avatar}\n          button={button}\n          handleClick={this.handleClick}\n        />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}