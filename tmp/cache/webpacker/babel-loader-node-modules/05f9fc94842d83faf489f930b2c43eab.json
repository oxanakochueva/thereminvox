{"ast":null,"code":"var _jsxFileName = \"/Users/oxana/thereminvox/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport 'whatwg-fetch';\nimport * as effects from '../tunes/effects';\nimport * as synths from '../tunes/synths';\nimport AutoFilter from '../components/effects/AutoFilter';\nimport AutoPanner from '../components/effects/AutoPanner';\nimport AutoWah from '../components/effects/AutoWah';\nimport BitCrusher from '../components/effects/BitCrusher';\nimport Chebyshev from '../components/effects/Chebyshev';\nimport Chorus from '../components/effects/Chorus';\nimport Distortion from '../components/effects/Distortion';\nimport FeedbackDelay from '../components/effects/FeedbackDelay';\nimport FeedbackEffect from '../components/effects/FeedbackEffect';\nimport Freeverb from '../components/effects/Freeverb';\nimport JcReverb from '../components/effects/JcReverb';\nimport Phaser from '../components/effects/Phaser';\nimport PingPongDelay from '../components/effects/PingPongDelay';\nimport PitchShift from '../components/effects/PitchShift';\nimport Reverb from '../components/effects/Reverb';\nimport StereoWidener from '../components/effects/StereoWidener';\nimport Tremolo from '../components/effects/Tremolo';\nimport Vibrato from '../components/effects/Vibrato';\nimport MetalSynth from '../components/synths/MetalSynth';\nimport BaseSynth from '../components/synths/BaseSynth';\nimport PolySynth from '../components/synths/PolySynth';\nimport MembraneSynth from '../components/synths/MembraneSynth';\nimport NoiseSynth from '../components/synths/NoiseSynth';\nimport NotesSynth from '../components/synths/NotesSynth';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var defaultWetValue = 0.8;\n    var beatSynth = synths.polySynth();\n    var beatChebyshev = effects.chebyshev();\n    var beatChorus = effects.chorus();\n    var beatVibrato = effects.vibrato();\n    var metalSynth = synths.metalSynth();\n    var metalDistortion = effects.distortion();\n    var metalAutoWah = effects.autoWah();\n    var metalFreeverb = effects.freeverb();\n    var membraneSynth = synths.membraneSynth();\n    var pluckSynth = synths.pluckSynth();\n    var notesSynth = synths.notesSynth();\n    var noiseSynth = synths.noiseSynth();\n    var counter;\n    var notes = synths.notes;\n    metalSynth.chain(metalDistortion, metalAutoWah, metalFreeverb, Tone.Master);\n    beatSynth.chain(beatChebyshev, beatChorus, beatVibrato, Tone.Master);\n    membraneSynth.toMaster();\n    pluckSynth.toMaster();\n    notesSynth.toMaster();\n    noiseSynth.toMaster(); //loops\n\n    var loop1 = new Tone.Loop(function (counter, time) {\n      counter = 0;\n\n      if (counter % 2 === 0) {\n        beatSynth.triggerAttackRelease('B2', '4n');\n        noiseSynth.triggerAttackRelease('E3', '8n');\n      }\n\n      if (counter % 18 === 0) {\n        metalSynth.triggerAttackRelease('G8', '5n');\n        beatSynth.triggerAttackRelease('B#0', '8n');\n      }\n\n      if (counter % 6 === 0) {\n        metalSynth.triggerAttackRelease('D8', '16n');\n        metalSynth.triggerAttackRelease('B1', '5n');\n      }\n\n      if (counter % 2 !== 1) {\n        membraneSynth.triggerAttackRelease('D3', '3n');\n        membraneSynth.triggerAttackRelease('Bb6', '4n');\n        beatSynth.triggerAttackRelease('Ab2', '8n');\n      }\n\n      if (counter % 9 === 0) {\n        pluckSynth.triggerAttackRelease('F#2', '9n');\n        metalSynth.triggerAttackRelease('Eb3', '2n');\n      }\n\n      counter = (counter + 1) % 32;\n    });\n    var loop2 = new Tone.Loop(function (time) {\n      pluckSynth.triggerAttackRelease('E2', '32n', time);\n    });\n    var loop3 = new Tone.Loop(function (time, note) {\n      beatSynth.triggerAttackRelease('A3', '1m', '17n');\n      pluckSynth.triggerAttackRelease('C4', '8n', '6n'); //3 octaves\n\n      beatSynth.triggerAttackRelease(['Eb4', 'Cb3', 'Eb2'], '7n');\n      beatSynth.triggerAttackRelease(['D2', 'A#3', 'Db4'], '4n'); // 4 octaves\n    });\n    var loop4 = new Tone.Loop(function (counter, time) {\n      counter = 0;\n\n      if (counter % 4 === 0) {\n        membraneSynth.triggerAttackRelease('F3', '8n');\n        beatSynth.triggerAttackRelease('B2', '4n');\n      }\n\n      if (counter % 5 === 0) {\n        metalSynth.triggerAttackRelease('A#8', '7n');\n        beatSynth.triggerAttackRelease('B1', '15n');\n      }\n\n      if (counter % 2 === 0) {\n        membraneSynth.triggerAttackRelease('D3', '3n');\n\n        if (counter % 13 !== 1) {\n          pluckSynth.triggerAttackRelease('G3', '8n');\n        }\n      }\n\n      counter = (counter + 1) % 16;\n    });\n    var loop5 = new Tone.Sequence(function (time, note) {\n      notesSynth.triggerAttackRelease(note, '4n', time);\n    }, notes, '8n');\n    _this.state = {\n      lastChange: Date.now(),\n      membraneSynth: membraneSynth,\n      notesSynth: notesSynth,\n      noiseSynth: noiseSynth,\n      pluckSynth: pluckSynth,\n      metalSynth: metalSynth,\n      metalAutoWah: {\n        name: 'metalAutoWah',\n        effect: metalAutoWah,\n        wet: defaultWetValue,\n        on: false\n      },\n      metalDistortion: {\n        name: 'metalDistortion',\n        effect: metalDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      metalFreeverb: {\n        name: 'metalFreeverb',\n        effect: metalFreeverb,\n        wet: defaultWetValue,\n        on: false\n      },\n      beatSynth: beatSynth,\n      beatChebyshev: {\n        name: 'beatChebyshev',\n        effect: beatChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n      beatChorus: {\n        name: 'beatChorus',\n        effect: beatChorus,\n        wet: defaultWetValue,\n        on: false\n      },\n      beatVibrato: {\n        name: 'beatVibrato',\n        effect: beatVibrato,\n        wet: defaultWetValue,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      loop5: {\n        loop: loop5,\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), 'toggleLoop', 'changeSynthValue', 'toggleEffect', 'changeEffectWetValue', 'changeEffectValue');\n\n    Tone.Transport.bpm.value = 76;\n    Tone.Transport.start();\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"changeSynthValue\",\n    value: function changeSynthValue(synthName, effectName, value) {\n      var synth = this.state[synthName];\n      var envelope = synth.envelope;\n      envelope[effectName] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        oscillator: synth.oscillator,\n        envelope: envelope\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          name = _this$state$effectNam.name,\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, effectProperty, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          name = _this$state$effectNam2.name,\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect[effectProperty].value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectValue\",\n    value: function changeEffectValue(effectName, effectProperty, value) {\n      var _this$state$effectNam3 = this.state[effectName],\n          name = _this$state$effectNam3.name,\n          effect = _this$state$effectNam3.effect,\n          wet = _this$state$effectNam3.wet,\n          on = _this$state$effectNam3.on;\n\n      if (effectProperty == 'order') {\n        value = Math.round(value);\n      }\n\n      effect[effectProperty] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          membraneSynth = _this$state.membraneSynth,\n          pluckSynth = _this$state.pluckSynth,\n          beatSynth = _this$state.beatSynth,\n          beatChebyshev = _this$state.beatChebyshev,\n          beatChorus = _this$state.beatChorus,\n          beatVibrato = _this$state.beatVibrato,\n          notesSynth = _this$state.notesSynth,\n          metalSynth = _this$state.metalSynth,\n          metalAutoWah = _this$state.metalAutoWah,\n          metalDistortion = _this$state.metalDistortion,\n          metalFreeverb = _this$state.metalFreeverb,\n          noiseSynth = _this$state.noiseSynth,\n          loop1 = _this$state.loop1,\n          loop2 = _this$state.loop2,\n          loop3 = _this$state.loop3,\n          loop4 = _this$state.loop4,\n          loop5 = _this$state.loop5;\n      var _toggleEffect = this.toggleEffect,\n          toggleLoop = this.toggleLoop,\n          changeSynthValue = this.changeSynthValue,\n          changeEffectWetValue = this.changeEffectWetValue,\n          changeEffectValue = this.changeEffectValue,\n          changeEffectFilterValue = this.changeEffectFilterValue;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"yellowSynth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(MetalSynth, {\n        synth: \"metalSynth\",\n        instrument: metalSynth,\n        on: loop1.on,\n        togglePlay: function togglePlay() {\n          return toggleLoop('loop1');\n        },\n        changeSynthValue: this.changeSynthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"innerContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, metalDistortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('metalDistortion');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"innerContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(AutoWah, Object.assign({}, metalAutoWah, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('metalAutoWah');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"innerContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(Freeverb, Object.assign({}, metalFreeverb, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('metalFreeverb');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"redSynth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(NotesSynth, {\n        synth: \"notesSynth\",\n        instrument: notesSynth,\n        on: loop5.on,\n        togglePlay: function togglePlay() {\n          return toggleLoop('loop5');\n        },\n        changeSynthValue: this.changeSynthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"whiteSynth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(PolySynth, {\n        synth: \"beatSynth\",\n        instrument: beatSynth,\n        on: loop3.on,\n        togglePlay: function togglePlay() {\n          return toggleLoop('loop3');\n        },\n        changeSynthValue: this.changeSynthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }), React.createElement(Chebyshev, Object.assign({}, beatChebyshev, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('beatChebyshev');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      })), React.createElement(Chorus, Object.assign({}, beatChorus, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('beatChorus');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      })), React.createElement(Vibrato, Object.assign({}, beatVibrato, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('beatVibrato');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"darkSynth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(BaseSynth, {\n        synth: \"pluckSynth\",\n        instrument: pluckSynth,\n        on: loop2.on,\n        togglePlay: function togglePlay() {\n          return toggleLoop('loop2');\n        },\n        changeSynthValue: this.changeSynthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/oxana/thereminvox/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","effects","synths","AutoFilter","AutoPanner","AutoWah","BitCrusher","Chebyshev","Chorus","Distortion","FeedbackDelay","FeedbackEffect","Freeverb","JcReverb","Phaser","PingPongDelay","PitchShift","Reverb","StereoWidener","Tremolo","Vibrato","MetalSynth","BaseSynth","PolySynth","MembraneSynth","NoiseSynth","NotesSynth","Synth","props","defaultWetValue","beatSynth","polySynth","beatChebyshev","chebyshev","beatChorus","chorus","beatVibrato","vibrato","metalSynth","metalDistortion","distortion","metalAutoWah","autoWah","metalFreeverb","freeverb","membraneSynth","pluckSynth","notesSynth","noiseSynth","counter","notes","chain","Master","toMaster","loop1","Loop","time","triggerAttackRelease","loop2","loop3","note","loop4","loop5","Sequence","state","lastChange","Date","now","name","effect","wet","on","loop","bindAll","Transport","bpm","value","start","loopName","stop","setState","synthName","effectName","synth","envelope","oscillator","effectProperty","Math","round","toggleEffect","toggleLoop","changeSynthValue","changeEffectWetValue","changeEffectValue","changeEffectFilterValue","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\nimport 'whatwg-fetch'\n\nimport * as effects from '../tunes/effects'\nimport * as synths from '../tunes/synths'\n\nimport AutoFilter from '../components/effects/AutoFilter'\nimport AutoPanner from '../components/effects/AutoPanner'\nimport AutoWah from '../components/effects/AutoWah'\nimport BitCrusher from '../components/effects/BitCrusher'\nimport Chebyshev from '../components/effects/Chebyshev'\nimport Chorus from '../components/effects/Chorus'\nimport Distortion from '../components/effects/Distortion'\nimport FeedbackDelay from '../components/effects/FeedbackDelay'\nimport FeedbackEffect from '../components/effects/FeedbackEffect'\nimport Freeverb from '../components/effects/Freeverb'\nimport JcReverb from '../components/effects/JcReverb'\nimport Phaser from '../components/effects/Phaser'\nimport PingPongDelay from '../components/effects/PingPongDelay'\nimport PitchShift from '../components/effects/PitchShift'\nimport Reverb from '../components/effects/Reverb'\nimport StereoWidener from '../components/effects/StereoWidener'\nimport Tremolo from '../components/effects/Tremolo'\nimport Vibrato from '../components/effects/Vibrato'\n\nimport MetalSynth from '../components/synths/MetalSynth'\nimport BaseSynth from '../components/synths/BaseSynth'\nimport PolySynth from '../components/synths/PolySynth'\nimport MembraneSynth from '../components/synths/MembraneSynth'\nimport NoiseSynth from '../components/synths/NoiseSynth'\nimport NotesSynth from '../components/synths/NotesSynth'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    const defaultWetValue = 0.8\n\n    let beatSynth = synths.polySynth()\n    let beatChebyshev = effects.chebyshev()\n    let beatChorus = effects.chorus()\n    let beatVibrato = effects.vibrato()\n\n    let metalSynth = synths.metalSynth()\n    let metalDistortion = effects.distortion()\n    let metalAutoWah = effects.autoWah()\n    let metalFreeverb = effects.freeverb()\n\n    let membraneSynth = synths.membraneSynth()\n    let pluckSynth = synths.pluckSynth()\n    let notesSynth = synths.notesSynth()\n    let noiseSynth = synths.noiseSynth()\n\n    let counter\n    let notes = synths.notes\n\n    metalSynth.chain(metalDistortion, metalAutoWah, metalFreeverb, Tone.Master)\n    beatSynth.chain(beatChebyshev, beatChorus, beatVibrato, Tone.Master)\n    membraneSynth.toMaster()\n    pluckSynth.toMaster()\n    notesSynth.toMaster()\n    noiseSynth.toMaster()\n\n    //loops\n\n    let loop1 = new Tone.Loop(function(counter, time) {\n      counter = 0\n\n      if (counter % 2 === 0) {\n        beatSynth.triggerAttackRelease('B2', '4n')\n        noiseSynth.triggerAttackRelease('E3', '8n')\n      }\n      if (counter % 18 === 0) {\n        metalSynth.triggerAttackRelease('G8', '5n')\n        beatSynth.triggerAttackRelease('B#0', '8n')\n      }\n\n      if (counter % 6 === 0) {\n        metalSynth.triggerAttackRelease('D8', '16n')\n        metalSynth.triggerAttackRelease('B1', '5n')\n      }\n      if (counter % 2 !== 1) {\n        membraneSynth.triggerAttackRelease('D3', '3n')\n        membraneSynth.triggerAttackRelease('Bb6', '4n')\n        beatSynth.triggerAttackRelease('Ab2', '8n')\n      }\n\n      if (counter % 9 === 0) {\n        pluckSynth.triggerAttackRelease('F#2', '9n')\n        metalSynth.triggerAttackRelease('Eb3', '2n')\n      }\n      counter = (counter + 1) % 32\n    })\n\n    let loop2 = new Tone.Loop(function(time) {\n      pluckSynth.triggerAttackRelease('E2', '32n', time)\n    })\n\n    let loop3 = new Tone.Loop(function(time, note) {\n      beatSynth.triggerAttackRelease('A3', '1m', '17n')\n      pluckSynth.triggerAttackRelease('C4', '8n', '6n')\n\n      //3 octaves\n\n      beatSynth.triggerAttackRelease(['Eb4', 'Cb3', 'Eb2'], '7n')\n      beatSynth.triggerAttackRelease(['D2', 'A#3', 'Db4'], '4n')\n\n      // 4 octaves\n    })\n\n    let loop4 = new Tone.Loop(function(counter, time) {\n      counter = 0\n      if (counter % 4 === 0) {\n        membraneSynth.triggerAttackRelease('F3', '8n')\n        beatSynth.triggerAttackRelease('B2', '4n')\n      }\n\n      if (counter % 5 === 0) {\n        metalSynth.triggerAttackRelease('A#8', '7n')\n        beatSynth.triggerAttackRelease('B1', '15n')\n      }\n\n      if (counter % 2 === 0) {\n        membraneSynth.triggerAttackRelease('D3', '3n')\n        if (counter % 13 !== 1) {\n          pluckSynth.triggerAttackRelease('G3', '8n')\n        }\n      }\n      counter = (counter + 1) % 16\n    })\n\n    let loop5 = new Tone.Sequence(\n      function(time, note) {\n        notesSynth.triggerAttackRelease(note, '4n', time)\n      },\n      notes,\n      '8n'\n    )\n\n    this.state = {\n      lastChange: Date.now(),\n      membraneSynth,\n      notesSynth,\n      noiseSynth,\n      pluckSynth,\n      metalSynth,\n      metalAutoWah: {\n        name: 'metalAutoWah',\n        effect: metalAutoWah,\n        wet: defaultWetValue,\n        on: false\n      },\n      metalDistortion: {\n        name: 'metalDistortion',\n        effect: metalDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      metalFreeverb: {\n        name: 'metalFreeverb',\n        effect: metalFreeverb,\n        wet: defaultWetValue,\n        on: false\n      },\n      beatSynth,\n      beatChebyshev: {\n        name: 'beatChebyshev',\n        effect: beatChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n      beatChorus: {\n        name: 'beatChorus',\n        effect: beatChorus,\n        wet: defaultWetValue,\n        on: false\n      },\n      beatVibrato: {\n        name: 'beatVibrato',\n        effect: beatVibrato,\n        wet: defaultWetValue,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      loop5: {\n        loop: loop5,\n        on: false\n      }\n    }\n\n    _.bindAll(\n      this,\n      'toggleLoop',\n      'changeSynthValue',\n      'toggleEffect',\n      'changeEffectWetValue',\n      'changeEffectValue'\n    )\n\n    Tone.Transport.bpm.value = 76\n    Tone.Transport.start()\n  }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n  }\n\n  changeSynthValue(synthName, effectName, value) {\n    let synth = this.state[synthName]\n    let envelope = synth.envelope\n    envelope[effectName] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        oscillator: synth.oscillator,\n        envelope: envelope\n      }\n    })\n  }\n\n  toggleEffect(effectName) {\n    let { name, effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, effectProperty, value) {\n    let { name, effect, wet, on } = this.state[effectName]\n\n    effect[effectProperty].value = on == true ? value : 0\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n  changeEffectValue(effectName, effectProperty, value) {\n    let { name, effect, wet, on } = this.state[effectName]\n\n    if (effectProperty == 'order') {\n      value = Math.round(value)\n    }\n\n    effect[effectProperty] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  render() {\n    let {\n      membraneSynth,\n      pluckSynth,\n      beatSynth,\n      beatChebyshev,\n      beatChorus,\n      beatVibrato,\n      notesSynth,\n      metalSynth,\n      metalAutoWah,\n      metalDistortion,\n      metalFreeverb,\n      noiseSynth,\n      loop1,\n      loop2,\n      loop3,\n      loop4,\n      loop5\n    } = this.state\n\n    let {\n      toggleEffect,\n      toggleLoop,\n      changeSynthValue,\n      changeEffectWetValue,\n      changeEffectValue,\n      changeEffectFilterValue\n    } = this\n\n    return (\n      <div className=\"container\">\n        <div className=\"yellowSynth\">\n          <MetalSynth\n            synth=\"metalSynth\"\n            instrument={metalSynth}\n            on={loop1.on}\n            togglePlay={() => toggleLoop('loop1')}\n            changeSynthValue={this.changeSynthValue}\n          />\n          <div className=\"innerContainer\">\n            <Distortion\n              {...metalDistortion}\n              toggleEffect={() => toggleEffect('metalDistortion')}\n              changeEffectWetValue={changeEffectWetValue}\n              changeEffectValue={changeEffectValue}\n            />\n          </div>\n          <div className=\"innerContainer\">\n            <AutoWah\n              {...metalAutoWah}\n              toggleEffect={() => toggleEffect('metalAutoWah')}\n              changeEffectWetValue={changeEffectWetValue}\n              changeEffectValue={changeEffectValue}\n            />\n          </div>\n          <div className=\"innerContainer\">\n            <Freeverb\n              {...metalFreeverb}\n              toggleEffect={() => toggleEffect('metalFreeverb')}\n              changeEffectWetValue={changeEffectWetValue}\n              changeEffectValue={changeEffectValue}\n            />\n          </div>\n        </div>\n        <div className=\"redSynth\">\n          <NotesSynth\n            synth=\"notesSynth\"\n            instrument={notesSynth}\n            on={loop5.on}\n            togglePlay={() => toggleLoop('loop5')}\n            changeSynthValue={this.changeSynthValue}\n          />\n        </div>\n\n        <div className=\"whiteSynth\">\n          <PolySynth\n            synth=\"beatSynth\"\n            instrument={beatSynth}\n            on={loop3.on}\n            togglePlay={() => toggleLoop('loop3')}\n            changeSynthValue={this.changeSynthValue}\n          />\n          <Chebyshev\n            {...beatChebyshev}\n            toggleEffect={() => toggleEffect('beatChebyshev')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <Chorus\n            {...beatChorus}\n            toggleEffect={() => toggleEffect('beatChorus')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <Vibrato\n            {...beatVibrato}\n            toggleEffect={() => toggleEffect('beatVibrato')}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n        </div>\n        <div className=\"darkSynth\">\n          <BaseSynth\n            synth=\"pluckSynth\"\n            instrument={pluckSynth}\n            on={loop2.on}\n            togglePlay={() => toggleLoop('loop2')}\n            changeSynthValue={this.changeSynthValue}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}