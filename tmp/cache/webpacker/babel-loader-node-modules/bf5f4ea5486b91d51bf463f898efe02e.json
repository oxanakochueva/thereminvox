{"ast":null,"code":"var _jsxFileName = \"/Users/oxana/thereminvox/app/javascript/components/effects/Distortion.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PlaySwitch from '../controls/PlaySwitch';\nimport ToggleSwitch from '../controls/ToggleSwitch';\nimport Slider from '../controls/Slider';\nimport Knob from '../controls/Knob';\nimport ButtonSet from '../controls/ButtonSet';\n\nvar Distortion =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Distortion, _React$Component);\n\n  function Distortion(props) {\n    _classCallCheck(this, Distortion);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Distortion).call(this, props));\n  }\n\n  _createClass(Distortion, [{\n    key: \"render\",\n    value: function render() {\n      var set = ['none', '2x', '4x'];\n      var _this$props = this.props,\n          name = _this$props.name,\n          effect = _this$props.effect,\n          wet = _this$props.wet,\n          on = _this$props.on,\n          toggleEffect = _this$props.toggleEffect,\n          changeEffectWetValue = _this$props.changeEffectWetValue,\n          changeEffectValue = _this$props.changeEffectValue;\n      return React.createElement(\"div\", {\n        className: \"Effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(ToggleSwitch, {\n        value: \"\",\n        current: on,\n        handleClick: toggleEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(Slider, {\n        name: name,\n        property: \"wet\",\n        min: \"0\",\n        max: \"1\",\n        value: wet,\n        handleValueChange: changeEffectWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(Slider, {\n        name: name,\n        property: \"distortion\",\n        min: \"0\",\n        max: \"100\",\n        on: on,\n        value: effect.distortion,\n        handleValueChange: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(ButtonSet, {\n        name: name,\n        property: \"oversample\",\n        set: set,\n        value: effect.oversample,\n        handleValueChange: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Distortion;\n}(React.Component);\n\nexport { Distortion as default };","map":{"version":3,"sources":["/Users/oxana/thereminvox/app/javascript/components/effects/Distortion.jsx"],"names":["React","PlaySwitch","ToggleSwitch","Slider","Knob","ButtonSet","Distortion","props","set","name","effect","wet","on","toggleEffect","changeEffectWetValue","changeEffectValue","distortion","oversample","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;IAEqBC,U;;;;;AACnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,mFACXA,KADW;AAElB;;;;6BAEQ;AACP,UAAMC,GAAG,GAAG,CAAC,MAAD,EAAS,IAAT,EAAe,IAAf,CAAZ;AADO,wBAWH,KAAKD,KAXF;AAAA,UAILE,IAJK,eAILA,IAJK;AAAA,UAKLC,MALK,eAKLA,MALK;AAAA,UAMLC,GANK,eAMLA,GANK;AAAA,UAOLC,EAPK,eAOLA,EAPK;AAAA,UAQLC,YARK,eAQLA,YARK;AAAA,UASLC,oBATK,eASLA,oBATK;AAAA,UAULC,iBAVK,eAULA,iBAVK;AAaP,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAC,EAApB;AAAuB,QAAA,OAAO,EAAEH,EAAhC;AAAoC,QAAA,WAAW,EAAEC,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEJ,IADR;AAEE,QAAA,QAAQ,EAAC,KAFX;AAGE,QAAA,GAAG,EAAC,GAHN;AAIE,QAAA,GAAG,EAAC,GAJN;AAKE,QAAA,KAAK,EAAEE,GALT;AAME,QAAA,iBAAiB,EAAEG,oBANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAUE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEL,IADR;AAEE,QAAA,QAAQ,EAAC,YAFX;AAGE,QAAA,GAAG,EAAC,GAHN;AAIE,QAAA,GAAG,EAAC,KAJN;AAKE,QAAA,EAAE,EAAEG,EALN;AAME,QAAA,KAAK,EAAEF,MAAM,CAACM,UANhB;AAOE,QAAA,iBAAiB,EAAED,iBAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAmBE,oBAAC,SAAD;AACE,QAAA,IAAI,EAAEN,IADR;AAEE,QAAA,QAAQ,EAAC,YAFX;AAGE,QAAA,GAAG,EAAED,GAHP;AAIE,QAAA,KAAK,EAAEE,MAAM,CAACO,UAJhB;AAKE,QAAA,iBAAiB,EAAEF,iBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,CADF;AA6BD;;;;EA/CqCf,KAAK,CAACkB,S;;SAAzBZ,U","sourcesContent":["import React from 'react'\n\nimport PlaySwitch from '../controls/PlaySwitch'\nimport ToggleSwitch from '../controls/ToggleSwitch'\nimport Slider from '../controls/Slider'\nimport Knob from '../controls/Knob'\nimport ButtonSet from '../controls/ButtonSet'\n\nexport default class Distortion extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const set = ['none', '2x', '4x']\n\n    const {\n      name,\n      effect,\n      wet,\n      on,\n      toggleEffect,\n      changeEffectWetValue,\n      changeEffectValue\n    } = this.props\n\n    return (\n      <div className=\"Effect\">\n        <ToggleSwitch value=\"\" current={on} handleClick={toggleEffect} />\n        <Slider\n          name={name}\n          property=\"wet\"\n          min=\"0\"\n          max=\"1\"\n          value={wet}\n          handleValueChange={changeEffectWetValue}\n        />\n        <Slider\n          name={name}\n          property=\"distortion\"\n          min=\"0\"\n          max=\"100\"\n          on={on}\n          value={effect.distortion}\n          handleValueChange={changeEffectValue}\n        />\n        <ButtonSet\n          name={name}\n          property=\"oversample\"\n          set={set}\n          value={effect.oversample}\n          handleValueChange={changeEffectValue}\n        />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}