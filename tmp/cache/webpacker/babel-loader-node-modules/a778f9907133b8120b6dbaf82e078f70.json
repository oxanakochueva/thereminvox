{"ast":null,"code":"import Tone from 'tone';\n\nfunction autoWah() {\n  var f = new Tone.AutoWah({\n    baseFrequency: 100,\n    octaves: 6,\n    sensitivity: 0,\n    Q: 2,\n    gain: 2,\n    follower: {\n      attack: 0.3,\n      release: 0.5\n    }\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction bitCrusher() {\n  var f = new Tone.BitCrusher({\n    bits: 4\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction chebyshev() {\n  var f = new Tone.Chebyshev({\n    order: 50,\n    oversample: 'none'\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction chorus() {\n  var f = new Tone.Chorus({\n    frequency: 1.5,\n    delayTime: 3.5,\n    depth: 0.7,\n    type: 'sine',\n    spread: 180\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction distortion() {\n  var f = new Tone.Distortion({\n    distortion: 0,\n    oversample: '4x'\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction feedbackDelay() {\n  var f = new Tone.FeedbackDelay({\n    delayTime: '4n',\n    maxDelay: 0.8\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction feedbackEffect() {\n  var f = new Tone.FeedbackEffect({\n    feedback: 0.125\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction freeverb() {\n  var f = new Tone.Freeverb({\n    roomSize: 0.7,\n    dampening: 3000\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction jcReverb() {\n  var f = new Tone.JCReverb({\n    roomSize: 0.5\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction reverb() {\n  var f = new Tone.Reverb({\n    decay: 1.5,\n    preDelay: 0.01\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction tremolo() {\n  var f = new Tone.Tremolo({\n    frequency: 10,\n    type: 'sine',\n    depth: 0.5,\n    spread: 180\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nfunction vibrato() {\n  var f = new Tone.Vibrato({\n    maxDelay: 0.005,\n    frequency: 5,\n    depth: 0.1,\n    type: 'sine'\n  });\n  f.wet.value = 0;\n  return f;\n}\n\nexport { autoWah, bitCrusher, chebyshev, chorus, distortion, feedbackDelay, feedbackEffect, freeverb, jcReverb, tremolo, vibrato };","map":{"version":3,"sources":["/Users/oxana/thereminvox/app/javascript/tunes/effects.jsx"],"names":["Tone","autoWah","f","AutoWah","baseFrequency","octaves","sensitivity","Q","gain","follower","attack","release","wet","value","bitCrusher","BitCrusher","bits","chebyshev","Chebyshev","order","oversample","chorus","Chorus","frequency","delayTime","depth","type","spread","distortion","Distortion","feedbackDelay","FeedbackDelay","maxDelay","feedbackEffect","FeedbackEffect","feedback","freeverb","Freeverb","roomSize","dampening","jcReverb","JCReverb","reverb","Reverb","decay","preDelay","tremolo","Tremolo","vibrato","Vibrato"],"mappings":"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","sourcesContent":["import Tone from 'tone'\n\nfunction autoWah() {\n  let f = new Tone.AutoWah({\n    baseFrequency: 100,\n    octaves: 6,\n    sensitivity: 0,\n    Q: 2,\n    gain: 2,\n    follower: {\n      attack: 0.3,\n      release: 0.5\n    }\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction bitCrusher() {\n  let f = new Tone.BitCrusher({\n    bits: 4\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction chebyshev() {\n  let f = new Tone.Chebyshev({\n    order: 50,\n    oversample: 'none'\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction chorus() {\n  let f = new Tone.Chorus({\n    frequency: 1.5,\n    delayTime: 3.5,\n    depth: 0.7,\n    type: 'sine',\n    spread: 180\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction distortion() {\n  let f = new Tone.Distortion({\n    distortion: 0,\n    oversample: '4x'\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction feedbackDelay() {\n  let f = new Tone.FeedbackDelay({\n    delayTime: '4n',\n    maxDelay: 0.8\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction feedbackEffect() {\n  let f = new Tone.FeedbackEffect({\n    feedback: 0.125\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction freeverb() {\n  let f = new Tone.Freeverb({\n    roomSize: 0.7,\n    dampening: 3000\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction jcReverb() {\n  let f = new Tone.JCReverb({\n    roomSize: 0.5\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction reverb() {\n  let f = new Tone.Reverb({\n    decay: 1.5,\n    preDelay: 0.01\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction tremolo() {\n  let f = new Tone.Tremolo({\n    frequency: 10,\n    type: 'sine',\n    depth: 0.5,\n    spread: 180\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nfunction vibrato() {\n  let f = new Tone.Vibrato({\n    maxDelay: 0.005,\n    frequency: 5,\n    depth: 0.1,\n    type: 'sine'\n  })\n\n  f.wet.value = 0\n\n  return f\n}\n\nexport {\n  autoWah,\n  bitCrusher,\n  chebyshev,\n  chorus,\n  distortion,\n  feedbackDelay,\n  feedbackEffect,\n  freeverb,\n  jcReverb,\n  tremolo,\n  vibrato\n}\n"]},"metadata":{},"sourceType":"module"}