{"ast":null,"code":"var _jsxFileName = \"/Users/oxana/thereminvox/app/javascript/containers/Synth.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport PlaySwitch from '../components/PlaySwitch';\nimport ToggleSwitch from '../components/ToggleSwitch';\nimport Slider from '../components/Slider';\nimport Knob from '../components/Knob';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var feedbackDelay1 = new Tone.FeedbackDelay({\n      delayTime: '32n',\n      maxDelay: 0.8\n    });\n    var feedbackDelay2 = new Tone.FeedbackDelay({\n      delayTime: '8n',\n      maxDelay: 0.8\n    });\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 2,\n      spread: 180\n    });\n    var distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: '4x'\n    });\n    var autoPanner = new Tone.AutoPanner({\n      frequency: 10,\n      type: 'sine',\n      depth: 100\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n    var effect = new Tone.Effect({\n      wet: 1\n    });\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    });\n    var phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n    var pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    });\n    var pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n    var reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    });\n    var stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    });\n    var vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    });\n    distortion.wet.value = 0;\n    autoFilter.wet.value = 0;\n    feedbackDelay1.wet.value = 0;\n    feedbackDelay2.wet.value = 0;\n    tremolo.wet.value = 0;\n    autoPanner.wet.value = 0;\n    autoWah.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    chebyshev.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    effect.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    freeverb.wet.value = 0;\n    jcReverb.wet.value = 0;\n    phaser.wet.value = 0;\n    pingPongDelay.wet.value = 0;\n    pitchShift.wet.value = 0;\n    reverb.wet.value = 0;\n    stereoWidener.wet.value = 0;\n    vibrato.wet.value = 0;\n    var synth = new Tone.Synth(); //.toMaster()\n\n    synth.chain(distortion, autoFilter, feedbackDelay1, feedbackDelay2, tremolo, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, effect, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, vibrato, Tone.Master);\n    var loop = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('C2', '8n', time);\n    }, '4n');\n    _this.state = {\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay1: {\n        effect: feedbackDelay1,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay2: {\n        effect: feedbackDelay2,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      effect: {\n        effect: effect,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop: loop\n    };\n\n    _.bindAll(_assertThisInitialized(_this), 'toggleSynth', 'toggleDistortion', 'changeDistortionWetValue', 'changeDistortionValue');\n\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"toggleSynth\",\n    value: function toggleSynth() {\n      var _this$state = this.state,\n          synth = _this$state.synth,\n          loop = _this$state.loop;\n      var instrument = synth.instrument,\n          on = synth.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState({\n        synth: {\n          instrument: instrument,\n          on: !on\n        }\n      });\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"toggleDistortion\",\n    value: function toggleDistortion() {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeDistortionWetValue\",\n    value: function changeDistortionWetValue(value) {\n      var _this$state$distortio2 = this.state.distortion,\n          effect = _this$state$distortio2.effect,\n          wet = _this$state$distortio2.wet,\n          on = _this$state$distortio2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(value) {\n      var _this$state$distortio3 = this.state.distortion,\n          effect = _this$state$distortio3.effect,\n          wet = _this$state$distortio3.wet,\n          on = _this$state$distortio3.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          distortion = _this$state2.distortion,\n          synth = _this$state2.synth;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"Play Synth\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: synth.on,\n        handleToggleClick: this.toggleSynth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }), \"Change Distortion Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"1\",\n        value: distortion.effect.wet.value,\n        handleValueChange: this.changeDistortionWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }), \"Change Distortion Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"100\",\n        value: distortion.effect.distortion,\n        handleValueChange: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }), \"// \", React.createElement(Knob, {\n        min: \"\",\n        max: \"\",\n        handleValueChange: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), \"Toggle Distortion\", React.createElement(ToggleSwitch, {\n        value: \"distortion\",\n        current: distortion.on,\n        handleClick: this.toggleDistortion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/oxana/thereminvox/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","PlaySwitch","ToggleSwitch","Slider","Knob","Synth","props","autoFilter","AutoFilter","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","feedbackDelay1","FeedbackDelay","delayTime","maxDelay","feedbackDelay2","tremolo","Tremolo","spread","distortion","Distortion","oversample","autoPanner","AutoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","BitCrusher","bits","chebyshev","Chebyshev","order","chorus","Chorus","convolver","Convolver","onload","noOp","normalize","effect","Effect","wet","feedbackEffect","FeedbackEffect","feedback","freeverb","Freeverb","roomSize","dampening","jcReverb","JCReverb","phaser","Phaser","stages","pingPongDelay","PingPongDelay","maxDelayTime","pitchShift","PitchShift","pitch","windowSize","reverb","Reverb","decay","preDelay","stereoWidener","StereoWidener","width","vibrato","Vibrato","value","synth","chain","Master","loop","Loop","time","triggerAttackRelease","state","on","instrument","bindAll","stop","start","setState","Transport","bpm","toggleSynth","changeDistortionWetValue","changeDistortionValue","toggleDistortion","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport PlaySwitch from '../components/PlaySwitch'\nimport ToggleSwitch from '../components/ToggleSwitch'\nimport Slider from '../components/Slider'\nimport Knob from '../components/Knob'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    })\n\n    let feedbackDelay1 = new Tone.FeedbackDelay({\n      delayTime: '32n',\n      maxDelay: 0.8\n    })\n\n    let feedbackDelay2 = new Tone.FeedbackDelay({\n      delayTime: '8n',\n      maxDelay: 0.8\n    })\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 2,\n      spread: 180\n    })\n\n    let distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: '4x'\n    })\n\n    let autoPanner = new Tone.AutoPanner({\n      frequency: 10,\n      type: 'sine',\n      depth: 100\n    })\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    })\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    })\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    })\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    })\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    })\n\n    let effect = new Tone.Effect({\n      wet: 1\n    })\n\n    let feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    })\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    })\n\n    let jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    })\n\n    let phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    })\n\n    let pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    })\n\n    let pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    })\n\n    let reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    })\n\n    let stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    })\n\n    let vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    })\n\n    distortion.wet.value = 0\n    autoFilter.wet.value = 0\n    feedbackDelay1.wet.value = 0\n    feedbackDelay2.wet.value = 0\n    tremolo.wet.value = 0\n    autoPanner.wet.value = 0\n    autoWah.wet.value = 0\n    bitCrusher.wet.value = 0\n    chebyshev.wet.value = 0\n    chorus.wet.value = 0\n    convolver.wet.value = 0\n    effect.wet.value = 0\n    feedbackEffect.wet.value = 0\n    freeverb.wet.value = 0\n    jcReverb.wet.value = 0\n    phaser.wet.value = 0\n    pingPongDelay.wet.value = 0\n    pitchShift.wet.value = 0\n    reverb.wet.value = 0\n    stereoWidener.wet.value = 0\n    vibrato.wet.value = 0\n\n    let synth = new Tone.Synth() //.toMaster()\n    synth.chain(\n      distortion,\n      autoFilter,\n      feedbackDelay1,\n      feedbackDelay2,\n      tremolo,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      effect,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      vibrato,\n      Tone.Master\n    )\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('C2', '8n', time)\n    }, '4n')\n\n    this.state = {\n      autoFilter: { effect: autoFilter, wet: 0, on: false },\n      feedbackDelay1: { effect: feedbackDelay1, wet: 0, on: false },\n      feedbackDelay2: { effect: feedbackDelay2, wet: 0, on: false },\n      tremolo: { effect: tremolo, wet: 0, on: false },\n      distortion: { effect: distortion, wet: 0, on: false },\n      autoPanner: { effect: autoPanner, wet: 0, on: false },\n      autoWah: { effect: autoWah, wet: 0, on: false },\n      bitCrusher: { effect: bitCrusher, wet: 0, on: false },\n      chebyshev: { effect: chebyshev, wet: 0, on: false },\n      chorus: { effect: chorus, wet: 0, on: false },\n      convolver: { effect: convolver, wet: 0, on: false },\n      effect: { effect: effect, wet: 0, on: false },\n      feedbackEffect: { effect: feedbackEffect, wet: 0, on: false },\n      freeverb: { effect: freeverb, wet: 0, on: false },\n      jcReverb: { effect: jcReverb, wet: 0, on: false },\n      phaser: { effect: phaser, wet: 0, on: false },\n      pingPongDelay: { effect: pingPongDelay, wet: 0, on: false },\n      pitchShift: { effect: pitchShift, wet: 0, on: false },\n      reverb: { effect: reverb, wet: 0, on: false },\n      stereoWidener: { effect: stereoWidener, wet: 0, on: false },\n      vibrato: { effect: vibrato, wet: 0, on: false },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop\n    }\n\n    _.bindAll(\n      this,\n      'toggleSynth',\n      'toggleDistortion',\n      'changeDistortionWetValue',\n      'changeDistortionValue'\n    )\n  }\n\n  toggleSynth() {\n    let { synth, loop } = this.state\n    let { instrument, on } = synth\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      synth: {\n        instrument: instrument,\n        on: !on\n      }\n    })\n\n    Tone.Transport.bpm.value = 115\n    Tone.Transport.start()\n  }\n\n  toggleDistortion() {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeDistortionWetValue(value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.wet.value = on == true ? value : 0\n    wet = value\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n  changeDistortionValue(value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.distortion = value\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  render() {\n    let { distortion, synth } = this.state\n    return (\n      <div>\n        Play Synth\n        <PlaySwitch\n          name=\"play\"\n          value={synth.on}\n          handleToggleClick={this.toggleSynth}\n        />\n        Change Distortion Wet Value\n        <Slider\n          min=\"0\"\n          max=\"1\"\n          value={distortion.effect.wet.value}\n          handleValueChange={this.changeDistortionWetValue}\n        />\n        Change Distortion Value\n        <Slider\n          min=\"0\"\n          max=\"100\"\n          value={distortion.effect.distortion}\n          handleValueChange={this.changeDistortionValue}\n        />\n        // <Knob min=\"\" max=\"\" handleValueChange={this.changeDistortionValue} />\n        Toggle Distortion\n        <ToggleSwitch\n          value=\"distortion\"\n          current={distortion.on}\n          handleClick={this.toggleDistortion}\n        />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}