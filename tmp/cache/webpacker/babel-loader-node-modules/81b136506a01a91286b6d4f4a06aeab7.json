{"ast":null,"code":"import Tone from 'tone';\n\nfunction metalSynth() {\n  return new Tone.MetalSynth({\n    frequency: 2500,\n    envelope: {\n      attack: 0.01,\n      decay: 0.2,\n      release: 0.08\n    },\n    harmonicity: 3,\n    modulationIndex: 16,\n    resonance: 7000,\n    octaves: 0.5\n  });\n}\n\nfunction polySynth() {\n  return new Tone.PolySynth(1, Tone.Synth, {\n    oscillator: {\n      type: 'fatsawtooth',\n      count: 3,\n      spread: 30,\n      phase: 10,\n      fadeIn: 4\n    },\n    envelope: {\n      attack: 0.3,\n      decay: 1,\n      sustain: 1,\n      release: 5,\n      attackCurve: 'exponential'\n    }\n  });\n}\n\nfunction noiseSynth() {\n  return new Tone.NoiseSynth({\n    noiseSynth: {\n      type: 'brown'\n    },\n    envelope: {\n      attack: 1.5,\n      decay: 0.01,\n      sustain: 1\n    }\n  });\n}\n\nfunction partSynth() {\n  return new Tone.PolySynth(1, Tone.Synth, {\n    oscillator: {\n      type: 'fatsawtooth',\n      count: 3,\n      spread: 30,\n      phase: 10,\n      fadeIn: 4\n    },\n    envelope: {\n      attack: 0.3,\n      decay: 1,\n      sustain: 1,\n      release: 5,\n      attackCurve: 'exponential'\n    }\n  });\n} // let synth1 = new Tone.PolySynth(1, Tone.Synth, {\n//   oscillator: {\n//     // fatsawtooth\n//     type: 'fatsawtooth',\n//     count: 3,\n//     spread: 30,\n//     phase: 10\n//     // fadeIn: 4\n//   },\n//   envelope: {\n//     attack: 1,\n//     decay: 1,\n//     sustain: 1,\n//     release: 5,\n//     attackCurve: 'exponential'\n//   }\n// })\n//\n// let synth2 = new Tone.PolySynth(1, Tone.Synth, {\n//   oscillator: {\n//     // fatsawtooth\n//     type: 'sine'\n//     // count: 1,\n//     // spread: 30\n//     // phase: 10\n//     // fadeIn: 4\n//   },\n//   envelope: {\n//     attack: 0.3,\n//     decay: 1,\n//     sustain: 1,\n//     release: 5,\n//     attackCurve: 'exponential'\n//   }\n// })\n//\n// let synth3 = new Tone.PolySynth(1, Tone.Synth, {\n//   oscillator: {\n//     // fatsawtooth\n//     type: 'square'\n//     // count: 1,\n//     // spread: 30\n//     // phase: 10\n//     // fadeIn: 4\n//   },\n//   envelope: {\n//     attack: 0.3,\n//     decay: 0.1,\n//     sustain: 0.3,\n//     release: 1,\n//     attackCurve: 'exponential'\n//   }\n// })\n//\n// let synth4 = new Tone.Synth({\n//   oscillator: {\n//     type: 'triangle'\n//   },\n//   envelope: {\n//     attack: 0.005,\n//     decay: 0.1,\n//     sustain: 0.3,\n//     release: 1\n//   }\n// })\n//\n// export { synth1, synth2, synth3, synth4 }\n\n\nexport { metalSynth, polySynth, partSynth };","map":{"version":3,"sources":["/Users/oxana/thereminvox/app/javascript/tunes/synths.jsx"],"names":["Tone","metalSynth","MetalSynth","frequency","envelope","attack","decay","release","harmonicity","modulationIndex","resonance","octaves","polySynth","PolySynth","Synth","oscillator","type","count","spread","phase","fadeIn","sustain","attackCurve","noiseSynth","NoiseSynth","partSynth"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAEA,SAASC,UAAT,GAAsB;AACpB,SAAO,IAAID,IAAI,CAACE,UAAT,CAAoB;AACzBC,IAAAA,SAAS,EAAE,IADc;AAEzBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,IADA;AAERC,MAAAA,KAAK,EAAE,GAFC;AAGRC,MAAAA,OAAO,EAAE;AAHD,KAFe;AAOzBC,IAAAA,WAAW,EAAE,CAPY;AAQzBC,IAAAA,eAAe,EAAE,EARQ;AASzBC,IAAAA,SAAS,EAAE,IATc;AAUzBC,IAAAA,OAAO,EAAE;AAVgB,GAApB,CAAP;AAYD;;AAED,SAASC,SAAT,GAAqB;AACnB,SAAO,IAAIZ,IAAI,CAACa,SAAT,CAAmB,CAAnB,EAAsBb,IAAI,CAACc,KAA3B,EAAkC;AACvCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,aADI;AAEVC,MAAAA,KAAK,EAAE,CAFG;AAGVC,MAAAA,MAAM,EAAE,EAHE;AAIVC,MAAAA,KAAK,EAAE,EAJG;AAKVC,MAAAA,MAAM,EAAE;AALE,KAD2B;AAQvChB,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,GADA;AAERC,MAAAA,KAAK,EAAE,CAFC;AAGRe,MAAAA,OAAO,EAAE,CAHD;AAIRd,MAAAA,OAAO,EAAE,CAJD;AAKRe,MAAAA,WAAW,EAAE;AALL;AAR6B,GAAlC,CAAP;AAgBD;;AAED,SAASC,UAAT,GAAsB;AACpB,SAAO,IAAIvB,IAAI,CAACwB,UAAT,CAAoB;AACzBD,IAAAA,UAAU,EAAE;AACVP,MAAAA,IAAI,EAAE;AADI,KADa;AAIzBZ,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,GADA;AAERC,MAAAA,KAAK,EAAE,IAFC;AAGRe,MAAAA,OAAO,EAAE;AAHD;AAJe,GAApB,CAAP;AAUD;;AAED,SAASI,SAAT,GAAqB;AACnB,SAAO,IAAIzB,IAAI,CAACa,SAAT,CAAmB,CAAnB,EAAsBb,IAAI,CAACc,KAA3B,EAAkC;AACvCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,aADI;AAEVC,MAAAA,KAAK,EAAE,CAFG;AAGVC,MAAAA,MAAM,EAAE,EAHE;AAIVC,MAAAA,KAAK,EAAE,EAJG;AAKVC,MAAAA,MAAM,EAAE;AALE,KAD2B;AAQvChB,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,GADA;AAERC,MAAAA,KAAK,EAAE,CAFC;AAGRe,MAAAA,OAAO,EAAE,CAHD;AAIRd,MAAAA,OAAO,EAAE,CAJD;AAKRe,MAAAA,WAAW,EAAE;AALL;AAR6B,GAAlC,CAAP;AAgBD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASrB,UAAT,EAAqBW,SAArB,EAAgCa,SAAhC","sourcesContent":["import Tone from 'tone'\n\nfunction metalSynth() {\n  return new Tone.MetalSynth({\n    frequency: 2500,\n    envelope: {\n      attack: 0.01,\n      decay: 0.2,\n      release: 0.08\n    },\n    harmonicity: 3,\n    modulationIndex: 16,\n    resonance: 7000,\n    octaves: 0.5\n  })\n}\n\nfunction polySynth() {\n  return new Tone.PolySynth(1, Tone.Synth, {\n    oscillator: {\n      type: 'fatsawtooth',\n      count: 3,\n      spread: 30,\n      phase: 10,\n      fadeIn: 4\n    },\n    envelope: {\n      attack: 0.3,\n      decay: 1,\n      sustain: 1,\n      release: 5,\n      attackCurve: 'exponential'\n    }\n  })\n}\n\nfunction noiseSynth() {\n  return new Tone.NoiseSynth({\n    noiseSynth: {\n      type: 'brown'\n    },\n    envelope: {\n      attack: 1.5,\n      decay: 0.01,\n      sustain: 1\n    }\n  })\n}\n\nfunction partSynth() {\n  return new Tone.PolySynth(1, Tone.Synth, {\n    oscillator: {\n      type: 'fatsawtooth',\n      count: 3,\n      spread: 30,\n      phase: 10,\n      fadeIn: 4\n    },\n    envelope: {\n      attack: 0.3,\n      decay: 1,\n      sustain: 1,\n      release: 5,\n      attackCurve: 'exponential'\n    }\n  })\n}\n\n// let synth1 = new Tone.PolySynth(1, Tone.Synth, {\n//   oscillator: {\n//     // fatsawtooth\n//     type: 'fatsawtooth',\n//     count: 3,\n//     spread: 30,\n//     phase: 10\n//     // fadeIn: 4\n//   },\n//   envelope: {\n//     attack: 1,\n//     decay: 1,\n//     sustain: 1,\n//     release: 5,\n//     attackCurve: 'exponential'\n//   }\n// })\n//\n// let synth2 = new Tone.PolySynth(1, Tone.Synth, {\n//   oscillator: {\n//     // fatsawtooth\n//     type: 'sine'\n//     // count: 1,\n//     // spread: 30\n//     // phase: 10\n//     // fadeIn: 4\n//   },\n//   envelope: {\n//     attack: 0.3,\n//     decay: 1,\n//     sustain: 1,\n//     release: 5,\n//     attackCurve: 'exponential'\n//   }\n// })\n//\n// let synth3 = new Tone.PolySynth(1, Tone.Synth, {\n//   oscillator: {\n//     // fatsawtooth\n//     type: 'square'\n//     // count: 1,\n//     // spread: 30\n//     // phase: 10\n//     // fadeIn: 4\n//   },\n//   envelope: {\n//     attack: 0.3,\n//     decay: 0.1,\n//     sustain: 0.3,\n//     release: 1,\n//     attackCurve: 'exponential'\n//   }\n// })\n//\n// let synth4 = new Tone.Synth({\n//   oscillator: {\n//     type: 'triangle'\n//   },\n//   envelope: {\n//     attack: 0.005,\n//     decay: 0.1,\n//     sustain: 0.3,\n//     release: 1\n//   }\n// })\n//\n// export { synth1, synth2, synth3, synth4 }\n\nexport { metalSynth, polySynth, partSynth }\n"]},"metadata":{},"sourceType":"module"}