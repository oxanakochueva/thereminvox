{"ast":null,"code":"var _jsxFileName = \"/Users/oxana/thereminvox/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport PlaySwitch from '../components/PlaySwitch';\nimport ToggleSwitch from '../components/ToggleSwitch';\nimport Slider from '../components/Slider';\nimport Knob from '../components/Knob';\nimport ButtonSet from '../controls/ButtonSet';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: 'none'\n    });\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var feedbackDelay1 = new Tone.FeedbackDelay({\n      delayTime: '32n',\n      maxDelay: 0.8\n    });\n    var feedbackDelay2 = new Tone.FeedbackDelay({\n      delayTime: '8n',\n      maxDelay: 0.8\n    });\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 2,\n      spread: 180\n    });\n    var autoPanner = new Tone.AutoPanner({\n      frequency: 10,\n      type: 'sine',\n      depth: 100\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 0,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n    var effect = new Tone.Effect({\n      wet: 1\n    });\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    });\n    var phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n    var pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    });\n    var pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n    var reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    });\n    var stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    });\n    var vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    });\n    distortion.wet.value = 0;\n    autoFilter.wet.value = 0;\n    feedbackDelay1.wet.value = 0;\n    feedbackDelay2.wet.value = 0;\n    tremolo.wet.value = 0;\n    autoPanner.wet.value = 0;\n    autoWah.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    chebyshev.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    effect.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    freeverb.wet.value = 0;\n    jcReverb.wet.value = 0;\n    phaser.wet.value = 0;\n    pingPongDelay.wet.value = 0;\n    pitchShift.wet.value = 0;\n    reverb.wet.value = 0;\n    stereoWidener.wet.value = 0;\n    vibrato.wet.value = 0;\n    var synth = new Tone.PolySynth(); //.toMaster()\n\n    synth.chain(distortion, autoFilter, feedbackDelay1, feedbackDelay2, tremolo, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, effect, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, vibrato, Tone.Master);\n    var noiseSynth = new Tone.NoiseSynth({\n      noiseSynth: {\n        type: 'brown'\n      },\n      envelope: {\n        attack: 1.5,\n        decay: 0.01,\n        sustain: 1\n      }\n    });\n    var metal = new Tone.MetalSynth({\n      frequency: 2500,\n      envelope: {\n        attack: 0.01,\n        decay: 0.2,\n        release: 0.08\n      },\n      harmonicity: 3,\n      modulationIndex: 16,\n      resonance: 7000,\n      octaves: 0.5\n    });\n    var pattern = new Tone.Pattern( // function(time, note) {\n    //   values: ['A3', 'B4', 'E6', 'D3']\n    // },\n    ['A3', 'B4', 'E6', 'D3'], ['C2', 'D4', 'E5', 'A6'], ['C3', 'A4', 'D6', 'E3'], 'upDown'); //loops\n\n    var loop1 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('C2', '8n', time);\n    }, '4n');\n    var loop2 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('E2', '32n', time);\n    }, '32n');\n    var loop3 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('D2', '1n', time);\n    }, '1n');\n    var loop4 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('E2', '32n', time);\n    }, '32n');\n    var loopNoise = new Tone.Loop(function (noiseSynth, time) {\n      synth.triggerAttackRelease(time, 0.5);\n    }, '16n'); // let loopPattern = new Tone.Pattern(function(time, pattern) {\n    //   synth.triggerAttackRelease(time)\n    // }, '4n')\n    // let loopPattern = new Tone.Pattern({\n    //   pattern: Tone.CtrlPattern.Type.Up,\n    //   callback: Tone.noOp,\n    //   value: 'upDown'\n    // })\n\n    var loopPattern = new Tone.Pattern(function (time, note) {\n      new Tone.CtrlPattern({\n        type: Tone.CtrlPattern.Type.Up,\n        values: ['C2', 'D4', 'E5', 'A6']\n      }); //the order of the notes passed in depends on the pattern\n    }, ['C2', 'D4', 'E5', 'A6'], 'upDown');\n    var loopMetal = new Tone.Loop(function (metal, time) {\n      synth.triggerAttackRelease('C3', '4n', time);\n    }, '8n');\n    _this.state = {\n      lastChange: Date.now(),\n      randomDelay: 100,\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay1: {\n        effect: feedbackDelay1,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay2: {\n        effect: feedbackDelay2,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      effect: {\n        effect: effect,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      loopNoise: {\n        loop: loopNoise,\n        on: false\n      },\n      loopPattern: {\n        loop: loopPattern,\n        on: false\n      },\n      loopMetal: {\n        loop: loopMetal,\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), 'toggleLoop', 'toggleEffect', 'changeEffectWetValue', 'changeDistortionValue', 'changeDistortionOversampleValue', 'changeAutoWahSensitivity', 'changeAutoWahBaseFrequency', 'generateRandom', 'getRandomArbitrary', 'componentDidMount');\n\n    Tone.Transport.bpm.value = 23; //115\n\n    Tone.Transport.start();\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.generateRandom()\n    }\n  }, {\n    key: \"getRandomArbitrary\",\n    value: function getRandomArbitrary(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n  }, {\n    key: \"generateRandom\",\n    value: function generateRandom() {\n      var _this$state = this.state,\n          lastChange = _this$state.lastChange,\n          randomDelay = _this$state.randomDelay;\n\n      if (Date.now() - lastChange >= randomDelay) {\n        this.setState({\n          lastChange: Date.now,\n          randomDelay: this.getRandomArbitrary(100, 3000)\n        });\n      } // this.generateRandom()\n\n    }\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeDistortionOversampleValue\",\n    value: function changeDistortionOversampleValue(value) {\n      var _this$state$distortio2 = this.state.distortion,\n          effect = _this$state$distortio2.effect,\n          wet = _this$state$distortio2.wet,\n          on = _this$state$distortio2.on;\n      effect.wet.value = 'none' == true ? 0 : wet;\n      on = !on;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeAutoWahSensitivity\",\n    value: function changeAutoWahSensitivity(value) {\n      var _this$state$autoWah = this.state.autoWah,\n          effect = _this$state$autoWah.effect,\n          wet = _this$state$autoWah.wet,\n          on = _this$state$autoWah.on;\n      console.log(value);\n      effect.sensitivity = value;\n      this.setState({\n        autoWah: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeAutoWahBaseFrequency\",\n    value: function changeAutoWahBaseFrequency(name, value) {\n      var _this$state$autoWah2 = this.state.autoWah,\n          effect = _this$state$autoWah2.effect,\n          wet = _this$state$autoWah2.wet,\n          on = _this$state$autoWah2.on;\n      effect.baseFrequency = value;\n      this.setState({\n        autoWah: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var set = ['none', '2x', '4x'];\n      var _this$state2 = this.state,\n          distortion = _this$state2.distortion,\n          autoWah = _this$state2.autoWah,\n          synth = _this$state2.synth,\n          loop1 = _this$state2.loop1,\n          loop2 = _this$state2.loop2,\n          loop3 = _this$state2.loop3,\n          loop4 = _this$state2.loop4,\n          loopNoise = _this$state2.loopNoise,\n          loopPattern = _this$state2.loopPattern,\n          loopMetal = _this$state2.loopMetal;\n      var toggleEffect = this.toggleEffect;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"synthsPlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"playButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, \"Loop1\"), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"playButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, \"Noise\"), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loopNoise.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loopNoise');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"playButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, \"Pattern\"), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loopPattern.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loopPattern');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"playButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, \"Loop4\"), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"playButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }, \"Metal\"), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loopMetal.on,\n        handleToggleClick: function handleToggleClick() {\n          _this2.toggleLoop('loopMetal');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"innerContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623\n        },\n        __self: this\n      }, \"Toggle Distortion\"), React.createElement(ToggleSwitch, {\n        value: \"distortion\",\n        current: distortion.on,\n        handleClick: function handleClick() {\n          toggleEffect('distortion');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631\n        },\n        __self: this\n      }, \"Change Distortion Oversample Value\"), React.createElement(ButtonSet, {\n        name: name,\n        property: \"oversample\",\n        set: set,\n        value: effect.oversample,\n        handleValueChange: this.changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639\n        },\n        __self: this\n      }, \"Change Distortion Wet Value\"), React.createElement(Slider, {\n        name: \"distortion\",\n        min: \"0\",\n        max: \"1\",\n        value: distortion.effect.wet.value,\n        handleValueChange: this.changeEffectWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647\n        },\n        __self: this\n      }, \"Change Distortion Value\"), React.createElement(Slider, {\n        name: \"distortion\",\n        min: \"0\",\n        max: \"100\",\n        value: distortion.effect.distortion,\n        handleValueChange: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"innerContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657\n        },\n        __self: this\n      }, \"Toggle AutoWah\"), React.createElement(ToggleSwitch, {\n        value: \"autoWah\",\n        current: autoWah.on,\n        handleClick: function handleClick() {\n          toggleEffect('autoWah');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665\n        },\n        __self: this\n      }, \"Change AutoWah Wet Value\"), React.createElement(Slider, {\n        name: \"autoWah\",\n        min: \"0\",\n        max: \"1\",\n        value: autoWah.effect.wet.value,\n        handleValueChange: this.changeEffectWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673\n        },\n        __self: this\n      }, \"Toggle AutoWah Frequency\"), React.createElement(Slider, {\n        name: \"autoWah\",\n        min: \"0\",\n        max: \"1000\",\n        value: autoWah.effect.baseFrequency,\n        handleValueChange: this.changeAutoWahBaseFrequency,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681\n        },\n        __self: this\n      }, \"Toggle AutoWah Octaves Sensitivity\"), React.createElement(Knob, {\n        min: \"-10\",\n        max: \"10\",\n        value: autoWah.effect.sensitivity,\n        handleValueChange: this.changeAutoWahSensitivity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682\n        },\n        __self: this\n      }), \"Toggle AutoWah Gain Toggle AutoWah Attack Toggle AutoWah Release\"));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/oxana/thereminvox/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","PlaySwitch","ToggleSwitch","Slider","Knob","ButtonSet","Synth","props","distortion","Distortion","oversample","autoFilter","AutoFilter","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","feedbackDelay1","FeedbackDelay","delayTime","maxDelay","feedbackDelay2","tremolo","Tremolo","spread","autoPanner","AutoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","BitCrusher","bits","chebyshev","Chebyshev","order","chorus","Chorus","convolver","Convolver","onload","noOp","normalize","effect","Effect","wet","feedbackEffect","FeedbackEffect","feedback","freeverb","Freeverb","roomSize","dampening","jcReverb","JCReverb","phaser","Phaser","stages","pingPongDelay","PingPongDelay","maxDelayTime","pitchShift","PitchShift","pitch","windowSize","reverb","Reverb","decay","preDelay","stereoWidener","StereoWidener","width","vibrato","Vibrato","value","synth","PolySynth","chain","Master","noiseSynth","NoiseSynth","envelope","sustain","metal","MetalSynth","harmonicity","modulationIndex","resonance","pattern","Pattern","loop1","Loop","time","triggerAttackRelease","loop2","loop3","loop4","loopNoise","loopPattern","note","CtrlPattern","Type","Up","values","loopMetal","state","lastChange","Date","now","randomDelay","on","instrument","loop","bindAll","Transport","bpm","start","min","max","Math","floor","random","setState","getRandomArbitrary","loopName","stop","effectName","console","log","name","set","toggleEffect","toggleLoop","changeEffectValue","changeEffectWetValue","changeDistortionValue","changeAutoWahBaseFrequency","changeAutoWahSensitivity","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport PlaySwitch from '../components/PlaySwitch'\nimport ToggleSwitch from '../components/ToggleSwitch'\nimport Slider from '../components/Slider'\nimport Knob from '../components/Knob'\n\nimport ButtonSet from '../controls/ButtonSet'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: 'none'\n    })\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    })\n\n    let feedbackDelay1 = new Tone.FeedbackDelay({\n      delayTime: '32n',\n      maxDelay: 0.8\n    })\n\n    let feedbackDelay2 = new Tone.FeedbackDelay({\n      delayTime: '8n',\n      maxDelay: 0.8\n    })\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 2,\n      spread: 180\n    })\n\n    let autoPanner = new Tone.AutoPanner({\n      frequency: 10,\n      type: 'sine',\n      depth: 100\n    })\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 0,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    })\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    })\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    })\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    })\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    })\n\n    let effect = new Tone.Effect({\n      wet: 1\n    })\n\n    let feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    })\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    })\n\n    let jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    })\n\n    let phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    })\n\n    let pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    })\n\n    let pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    })\n\n    let reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    })\n\n    let stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    })\n\n    let vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    })\n\n    distortion.wet.value = 0\n    autoFilter.wet.value = 0\n    feedbackDelay1.wet.value = 0\n    feedbackDelay2.wet.value = 0\n    tremolo.wet.value = 0\n    autoPanner.wet.value = 0\n    autoWah.wet.value = 0\n    bitCrusher.wet.value = 0\n    chebyshev.wet.value = 0\n    chorus.wet.value = 0\n    convolver.wet.value = 0\n    effect.wet.value = 0\n    feedbackEffect.wet.value = 0\n    freeverb.wet.value = 0\n    jcReverb.wet.value = 0\n    phaser.wet.value = 0\n    pingPongDelay.wet.value = 0\n    pitchShift.wet.value = 0\n    reverb.wet.value = 0\n    stereoWidener.wet.value = 0\n    vibrato.wet.value = 0\n\n    let synth = new Tone.PolySynth() //.toMaster()\n\n    synth.chain(\n      distortion,\n      autoFilter,\n      feedbackDelay1,\n      feedbackDelay2,\n      tremolo,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      effect,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      vibrato,\n      Tone.Master\n    )\n\n    let noiseSynth = new Tone.NoiseSynth({\n      noiseSynth: {\n        type: 'brown'\n      },\n      envelope: {\n        attack: 1.5,\n        decay: 0.01,\n        sustain: 1\n      }\n    })\n\n    let metal = new Tone.MetalSynth({\n      frequency: 2500,\n      envelope: {\n        attack: 0.01,\n        decay: 0.2,\n        release: 0.08\n      },\n      harmonicity: 3,\n      modulationIndex: 16,\n      resonance: 7000,\n      octaves: 0.5\n    })\n\n    let pattern = new Tone.Pattern(\n      // function(time, note) {\n      //   values: ['A3', 'B4', 'E6', 'D3']\n      // },\n      ['A3', 'B4', 'E6', 'D3'],\n      ['C2', 'D4', 'E5', 'A6'],\n      ['C3', 'A4', 'D6', 'E3'],\n      'upDown'\n    )\n\n    //loops\n\n    let loop1 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('C2', '8n', time)\n    }, '4n')\n\n    let loop2 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('E2', '32n', time)\n    }, '32n')\n\n    let loop3 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('D2', '1n', time)\n    }, '1n')\n\n    let loop4 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('E2', '32n', time)\n    }, '32n')\n\n    let loopNoise = new Tone.Loop(function(noiseSynth, time) {\n      synth.triggerAttackRelease(time, 0.5)\n    }, '16n')\n\n    // let loopPattern = new Tone.Pattern(function(time, pattern) {\n    //   synth.triggerAttackRelease(time)\n    // }, '4n')\n\n    // let loopPattern = new Tone.Pattern({\n    //   pattern: Tone.CtrlPattern.Type.Up,\n    //   callback: Tone.noOp,\n    //   value: 'upDown'\n    // })\n\n    let loopPattern = new Tone.Pattern(\n      function(time, note) {\n        new Tone.CtrlPattern({\n          type: Tone.CtrlPattern.Type.Up,\n          values: ['C2', 'D4', 'E5', 'A6']\n        })\n        //the order of the notes passed in depends on the pattern\n      },\n      ['C2', 'D4', 'E5', 'A6'],\n      'upDown'\n    )\n\n    let loopMetal = new Tone.Loop(function(metal, time) {\n      synth.triggerAttackRelease('C3', '4n', time)\n    }, '8n')\n\n    this.state = {\n      lastChange: Date.now(),\n      randomDelay: 100,\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay1: {\n        effect: feedbackDelay1,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay2: {\n        effect: feedbackDelay2,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      effect: {\n        effect: effect,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      loopNoise: {\n        loop: loopNoise,\n        on: false\n      },\n      loopPattern: {\n        loop: loopPattern,\n        on: false\n      },\n      loopMetal: {\n        loop: loopMetal,\n        on: false\n      }\n    }\n\n    _.bindAll(\n      this,\n      'toggleLoop',\n      'toggleEffect',\n      'changeEffectWetValue',\n      'changeDistortionValue',\n      'changeDistortionOversampleValue',\n      'changeAutoWahSensitivity',\n      'changeAutoWahBaseFrequency',\n      'generateRandom',\n      'getRandomArbitrary',\n      'componentDidMount'\n    )\n\n    Tone.Transport.bpm.value = 23 //115\n    Tone.Transport.start()\n  }\n\n  componentDidMount() {\n    // this.generateRandom()\n  }\n\n  getRandomArbitrary(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  generateRandom() {\n    const { lastChange, randomDelay } = this.state\n    if (Date.now() - lastChange >= randomDelay) {\n      this.setState({\n        lastChange: Date.now,\n        randomDelay: this.getRandomArbitrary(100, 3000)\n      })\n    }\n    // this.generateRandom()\n  }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n  }\n\n  toggleEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on == true ? value : 0\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.distortion = value\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeDistortionOversampleValue(value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.wet.value = 'none' == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeAutoWahSensitivity(value) {\n    let { effect, wet, on } = this.state.autoWah\n    console.log(value)\n    effect.sensitivity = value\n\n    this.setState({\n      autoWah: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeAutoWahBaseFrequency(name, value) {\n    let { effect, wet, on } = this.state.autoWah\n    effect.baseFrequency = value\n\n    this.setState({\n      autoWah: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  render() {\n    const set = ['none', '2x', '4x']\n\n    let {\n      distortion,\n      autoWah,\n      synth,\n      loop1,\n      loop2,\n      loop3,\n      loop4,\n      loopNoise,\n      loopPattern,\n      loopMetal\n    } = this.state\n    let { toggleEffect } = this\n    return (\n      <div className=\"container\">\n        <div className=\"synthsPlay\">\n          <div className=\"playButton\">\n            <h3>Loop1</h3>\n            <PlaySwitch\n              name=\"play\"\n              value={loop1.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop1')\n              }}\n            />\n          </div>\n          <div className=\"playButton\">\n            <h3>Noise</h3>\n            <PlaySwitch\n              name=\"play\"\n              value={loopNoise.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loopNoise')\n              }}\n            />\n          </div>\n          <div className=\"playButton\">\n            <h3>Pattern</h3>\n            <PlaySwitch\n              name=\"play\"\n              value={loopPattern.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loopPattern')\n              }}\n            />\n          </div>\n          <div className=\"playButton\">\n            <h3>Loop4</h3>\n            <PlaySwitch\n              name=\"play\"\n              value={loop4.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loop4')\n              }}\n            />\n          </div>\n          <div className=\"playButton\">\n            <h3>Metal</h3>\n            <PlaySwitch\n              name=\"play\"\n              value={loopMetal.on}\n              handleToggleClick={() => {\n                this.toggleLoop('loopMetal')\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"innerContainer\">\n          <h2>Toggle Distortion</h2>\n          <ToggleSwitch\n            value=\"distortion\"\n            current={distortion.on}\n            handleClick={() => {\n              toggleEffect('distortion')\n            }}\n          />\n          <h3>Change Distortion Oversample Value</h3>\n          <ButtonSet\n            name={name}\n            property=\"oversample\"\n            set={set}\n            value={effect.oversample}\n            handleValueChange={this.changeEffectValue}\n          />\n          <h3>Change Distortion Wet Value</h3>\n          <Slider\n            name=\"distortion\"\n            min=\"0\"\n            max=\"1\"\n            value={distortion.effect.wet.value}\n            handleValueChange={this.changeEffectWetValue}\n          />\n          <h3>Change Distortion Value</h3>\n          <Slider\n            name=\"distortion\"\n            min=\"0\"\n            max=\"100\"\n            value={distortion.effect.distortion}\n            handleValueChange={this.changeDistortionValue}\n          />\n        </div>\n        <div className=\"innerContainer\">\n          <h2>Toggle AutoWah</h2>\n          <ToggleSwitch\n            value=\"autoWah\"\n            current={autoWah.on}\n            handleClick={() => {\n              toggleEffect('autoWah')\n            }}\n          />\n          <h3>Change AutoWah Wet Value</h3>\n          <Slider\n            name=\"autoWah\"\n            min=\"0\"\n            max=\"1\"\n            value={autoWah.effect.wet.value}\n            handleValueChange={this.changeEffectWetValue}\n          />\n          <h3>Toggle AutoWah Frequency</h3>\n          <Slider\n            name=\"autoWah\"\n            min=\"0\"\n            max=\"1000\"\n            value={autoWah.effect.baseFrequency}\n            handleValueChange={this.changeAutoWahBaseFrequency}\n          />\n          <h3>Toggle AutoWah Octaves Sensitivity</h3>\n          <Knob\n            min=\"-10\"\n            max=\"10\"\n            value={autoWah.effect.sensitivity}\n            handleValueChange={this.changeAutoWahSensitivity}\n          />\n          Toggle AutoWah Gain Toggle AutoWah Attack Toggle AutoWah Release\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}