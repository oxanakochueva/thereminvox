{"ast":null,"code":"var _jsxFileName = \"/Users/oxana/Desktop/\\u0431\\u043E\\u0433 \\u043B\\u044E\\u0431\\u0438\\u0442/zzzkhr/thereminvox/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\nimport \"whatwg-fetch\";\nimport * as effects from \"../tunes/effects\";\nimport * as synths from \"../tunes/synths\";\nimport AutoFilter from \"../components/effects/AutoFilter\";\nimport AutoPanner from \"../components/effects/AutoPanner\";\nimport AutoWah from \"../components/effects/AutoWah\";\nimport BitCrusher from \"../components/effects/BitCrusher\";\nimport Chebyshev from \"../components/effects/Chebyshev\";\nimport Chorus from \"../components/effects/Chorus\";\nimport Distortion from \"../components/effects/Distortion\";\nimport FeedbackDelay from \"../components/effects/FeedbackDelay\";\nimport FeedbackEffect from \"../components/effects/FeedbackEffect\";\nimport Freeverb from \"../components/effects/Freeverb\";\nimport JcReverb from \"../components/effects/JcReverb\";\nimport Phaser from \"../components/effects/Phaser\";\nimport PingPongDelay from \"../components/effects/PingPongDelay\";\nimport PitchShift from \"../components/effects/PitchShift\";\nimport Reverb from \"../components/effects/Reverb\";\nimport StereoWidener from \"../components/effects/StereoWidener\";\nimport Tremolo from \"../components/effects/Tremolo\";\nimport Vibrato from \"../components/effects/Vibrato\";\nimport MetalSynth from \"../components/synths/MetalSynth\";\nimport BaseSynth from \"../components/synths/BaseSynth\";\nimport PolySynth from \"../components/synths/PolySynth\";\nimport MembraneSynth from \"../components/synths/MembraneSynth\";\nimport NotesSynth from \"../components/synths/NotesSynth\";\nimport Volume from \"../components/synths/Volume\";\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var defaultWetValue = 0.8;\n    var beatSynth = synths.polySynth();\n    var beatChebyshev = effects.chebyshev();\n    var beatChorus = effects.chorus();\n    var beatVibrato = effects.vibrato();\n    var metalSynth = synths.metalSynth();\n    var metalDistortion = effects.distortion();\n    var metalFreeverb = effects.freeverb();\n    var notesSynth = synths.notesSynth();\n    var notesTremolo = effects.tremolo();\n    var notesPingPongDelay = effects.pingPongDelay();\n    var pluckSynth = synths.pluckSynth();\n    var pluckAutoWah = effects.autoWah();\n    var membraneSynth = synths.membraneSynth();\n    var counter;\n    var notes = synths.notes;\n    var notesBeat = synths.notesBeat;\n    metalSynth.chain(metalDistortion, metalFreeverb, Tone.Master);\n    beatSynth.chain(beatChebyshev, beatChorus, beatVibrato, Tone.Master);\n    membraneSynth.toMaster();\n    pluckSynth.chain(pluckAutoWah, Tone.Master);\n    notesSynth.chain(notesTremolo, notesPingPongDelay, Tone.Master); //loops\n\n    var loop1 = new Tone.Loop(function (time) {\n      metalSynth.triggerAttackRelease();\n    });\n    loop1.mute = true;\n    loop1.start();\n    var loop2 = new Tone.Sequence(function (time, note) {\n      notesSynth.triggerAttackRelease(note, \"8n\", time);\n    }, notesBeat, \"3n\");\n    loop2.mute = true;\n    loop2.start();\n    var loop3 = new Tone.Loop(function (time, note) {\n      beatSynth.triggerAttackRelease(\"A3\", \"1m\", \"17n\");\n      pluckSynth.triggerAttackRelease(\"C4\", \"8n\", \"6n\");\n      beatSynth.triggerAttackRelease([\"Eb4\", \"Cb3\", \"Eb2\"], \"7n\");\n      beatSynth.triggerAttackRelease([\"D2\", \"A#3\", \"Db4\"], \"4n\");\n    });\n    loop3.mute = true;\n    loop3.start();\n    var loop4 = new Tone.Loop(function (counter, time) {\n      counter = 0;\n\n      if (counter % 4 === 0) {\n        membraneSynth.triggerAttackRelease(\"F3\", \"8n\");\n        beatSynth.triggerAttackRelease(\"B2\", \"4n\");\n      }\n\n      if (counter % 5 === 0) {\n        metalSynth.triggerAttackRelease(\"A#8\", \"7n\");\n        beatSynth.triggerAttackRelease(\"B1\", \"15n\");\n      }\n\n      if (counter % 2 === 0) {\n        membraneSynth.triggerAttackRelease(\"D3\", \"3n\");\n\n        if (counter % 13 !== 1) {\n          pluckSynth.triggerAttackRelease(\"G3\", \"8n\");\n        }\n      }\n\n      counter = (counter + 1) % 16;\n    });\n    loop4.mute = true;\n    loop4.start();\n    var loop5 = new Tone.Sequence(function (time, note) {\n      notesSynth.triggerAttackRelease(note, \"4n\", time);\n    }, notes, \"8n\");\n    loop5.mute = true;\n    loop5.start();\n    _this.state = {\n      lastChange: Date.now(),\n      membraneSynth: membraneSynth,\n      metalSynth: metalSynth,\n      notesSynth: notesSynth,\n      notesTremolo: {\n        name: \"notesTremolo\",\n        effect: notesTremolo,\n        wet: defaultWetValue,\n        on: false\n      },\n      notesPingPongDelay: {\n        name: \"notesPingPongDelay\",\n        effect: notesPingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      metalDistortion: {\n        name: \"metalDistortion\",\n        effect: metalDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      metalFreeverb: {\n        name: \"metalFreeverb\",\n        effect: metalFreeverb,\n        wet: defaultWetValue,\n        on: false\n      },\n      pluckSynth: pluckSynth,\n      pluckAutoWah: {\n        name: \"pluckAutoWah\",\n        effect: pluckAutoWah,\n        wet: defaultWetValue,\n        on: false\n      },\n      beatSynth: beatSynth,\n      beatChebyshev: {\n        name: \"beatChebyshev\",\n        effect: beatChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n      beatChorus: {\n        name: \"beatChorus\",\n        effect: beatChorus,\n        wet: defaultWetValue,\n        on: false\n      },\n      beatVibrato: {\n        name: \"beatVibrato\",\n        effect: beatVibrato,\n        wet: defaultWetValue,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      loop5: {\n        loop: loop5,\n        on: false\n      },\n      volume: 0\n    };\n\n    _.bindAll(_assertThisInitialized(_this), \"toggleLoop\", \"changeSynthValue\", \"changeVolumeValue\", \"toggleEffect\", \"changeEffectWetValue\", \"changeEffectValue\");\n\n    Tone.Transport.bpm.value = 76;\n    Tone.Transport.start();\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n\n      if (on == true) {\n        loop.mute = true;\n      } else {\n        loop.mute = false;\n      }\n\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"changeSynthValue\",\n    value: function changeSynthValue(synthName, effectName, value) {\n      var regexBefore = /(.*)\\./;\n      var regexAfter = /\\.(.*)/;\n      var synth = this.state[synthName];\n      var effectNameNamespace = effectName.match(regexBefore)[1];\n      var effectNameInNamespace = effectName.match(regexAfter)[1];\n\n      if (synthName == \"notesSynth\") {\n        if (effectNameNamespace == \"oscillator\") {\n          synth.voices[0].oscillator[effectNameInNamespace] = value;\n        } else if (effectNameNamespace == \"envelope\") {\n          synth.voices[0].envelope[effectNameInNamespace] = value;\n        }\n      } else {\n        synth[effectName] = value;\n      }\n\n      this.setState(_defineProperty({}, \"\".concat(synthName), synth));\n    }\n  }, {\n    key: \"changeVolumeValue\",\n    value: function changeVolumeValue(synthName, effectName, value) {\n      Tone.Master.volume.value = Math.round(value);\n      this.setState({\n        volume: Math.round(value)\n      });\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          name = _this$state$effectNam.name,\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, effectProperty, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          name = _this$state$effectNam2.name,\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect[effectProperty].value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectValue\",\n    value: function changeEffectValue(effectName, effectProperty, value) {\n      var _this$state$effectNam3 = this.state[effectName],\n          name = _this$state$effectNam3.name,\n          effect = _this$state$effectNam3.effect,\n          wet = _this$state$effectNam3.wet,\n          on = _this$state$effectNam3.on;\n\n      if (effectProperty == \"order\") {\n        value = Math.round(value);\n      }\n\n      effect[effectProperty] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          membraneSynth = _this$state.membraneSynth,\n          pluckSynth = _this$state.pluckSynth,\n          pluckAutoWah = _this$state.pluckAutoWah,\n          beatSynth = _this$state.beatSynth,\n          beatChebyshev = _this$state.beatChebyshev,\n          beatChorus = _this$state.beatChorus,\n          beatVibrato = _this$state.beatVibrato,\n          notesSynth = _this$state.notesSynth,\n          notesTremolo = _this$state.notesTremolo,\n          notesPingPongDelay = _this$state.notesPingPongDelay,\n          metalSynth = _this$state.metalSynth,\n          metalDistortion = _this$state.metalDistortion,\n          metalFreeverb = _this$state.metalFreeverb,\n          loop1 = _this$state.loop1,\n          loop2 = _this$state.loop2,\n          loop3 = _this$state.loop3,\n          loop4 = _this$state.loop4,\n          loop5 = _this$state.loop5,\n          volume = _this$state.volume;\n      var _toggleEffect = this.toggleEffect,\n          toggleLoop = this.toggleLoop,\n          changeSynthValue = this.changeSynthValue,\n          changeVolumeValue = this.changeVolumeValue,\n          changeEffectWetValue = this.changeEffectWetValue,\n          changeEffectValue = this.changeEffectValue,\n          changeEffectFilterValue = this.changeEffectFilterValue;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dikiy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"Dikiy Dance Dikiy Dance Dikiy Dance Dikiy Dance Dikiy Dance\"), React.createElement(\"div\", {\n        className: \"common\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(Volume, {\n        volume: volume,\n        changeVolumeValue: changeVolumeValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"yellowSynth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text swipe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"\\u2191\"), \"Swipe\"), React.createElement(\"div\", {\n        className: \"text click\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"\\u2191\"), \"Click\"), React.createElement(MetalSynth, {\n        synth: \"metalSynth\",\n        instrument: metalSynth,\n        on: loop1.on,\n        togglePlay: function togglePlay() {\n          return toggleLoop(\"loop1\");\n        },\n        changeSynthValue: this.changeSynthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }), React.createElement(Distortion, Object.assign({}, metalDistortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"metalDistortion\");\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      })), React.createElement(Freeverb, Object.assign({}, metalFreeverb, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"metalFreeverb\");\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"redSynth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text onOf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, \"\\u2191\"), \" ON/OF\"), React.createElement(\"div\", {\n        className: \"text swipe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, \"\\u2191\"), \" Swipe\"), React.createElement(\"div\", {\n        className: \"text click\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, \"\\u2191\"), \" Click\"), React.createElement(\"div\", {\n        className: \"text click2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, \"\\u2191\"), \" Click\"), React.createElement(NotesSynth, {\n        synth: \"notesSynth\",\n        instrument: notesSynth,\n        on: loop5.on,\n        togglePlay: function togglePlay() {\n          return toggleLoop(\"loop5\");\n        },\n        changeSynthValue: this.changeSynthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }), React.createElement(Tremolo, Object.assign({}, notesTremolo, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"notesTremolo\");\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      })), React.createElement(PingPongDelay, Object.assign({}, notesPingPongDelay, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"notesPingPongDelay\");\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"whiteSynth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text onOf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, \"\\u2191\"), \"ON/OF\"), React.createElement(\"div\", {\n        className: \"text swipe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, \"\\u2191\"), \"Swipe\"), React.createElement(\"div\", {\n        className: \"text spin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, \"\\u2191\"), \"Spin\"), React.createElement(\"div\", {\n        className: \"text click\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, \"\\u2191\"), \"Click\"), React.createElement(\"div\", {\n        className: \"text swipe2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, \"\\u2191\"), \"Swipe\"), React.createElement(PolySynth, {\n        synth: \"beatSynth\",\n        instrument: beatSynth,\n        on: loop3.on,\n        togglePlay: function togglePlay() {\n          return toggleLoop(\"loop3\");\n        },\n        changeSynthValue: this.changeSynthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }), React.createElement(Chebyshev, Object.assign({}, beatChebyshev, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"beatChebyshev\");\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      })), React.createElement(Chorus, Object.assign({}, beatChorus, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"beatChorus\");\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      })), React.createElement(Vibrato, Object.assign({}, beatVibrato, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"beatVibrato\");\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"darkSynth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text spin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \"\\u2191\"), \"Spin\"), React.createElement(\"div\", {\n        className: \"text click\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, \"\\u2191\"), \"Click\"), React.createElement(BaseSynth, {\n        synth: \"pluckSynth\",\n        instrument: pluckSynth,\n        on: loop2.on,\n        togglePlay: function togglePlay() {\n          return toggleLoop(\"loop2\");\n        },\n        changeSynthValue: this.changeSynthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }), React.createElement(AutoWah, Object.assign({}, pluckAutoWah, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"pluckAutoWah\");\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/oxana/Desktop/бог любит/zzzkhr/thereminvox/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","effects","synths","AutoFilter","AutoPanner","AutoWah","BitCrusher","Chebyshev","Chorus","Distortion","FeedbackDelay","FeedbackEffect","Freeverb","JcReverb","Phaser","PingPongDelay","PitchShift","Reverb","StereoWidener","Tremolo","Vibrato","MetalSynth","BaseSynth","PolySynth","MembraneSynth","NotesSynth","Volume","Synth","props","defaultWetValue","beatSynth","polySynth","beatChebyshev","chebyshev","beatChorus","chorus","beatVibrato","vibrato","metalSynth","metalDistortion","distortion","metalFreeverb","freeverb","notesSynth","notesTremolo","tremolo","notesPingPongDelay","pingPongDelay","pluckSynth","pluckAutoWah","autoWah","membraneSynth","counter","notes","notesBeat","chain","Master","toMaster","loop1","Loop","time","triggerAttackRelease","mute","start","loop2","Sequence","note","loop3","loop4","loop5","state","lastChange","Date","now","name","effect","wet","on","loop","volume","bindAll","Transport","bpm","value","loopName","setState","synthName","effectName","regexBefore","regexAfter","synth","effectNameNamespace","match","effectNameInNamespace","voices","oscillator","envelope","Math","round","effectProperty","toggleEffect","toggleLoop","changeSynthValue","changeVolumeValue","changeEffectWetValue","changeEffectValue","changeEffectFilterValue","Component"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\nimport \"whatwg-fetch\";\n\nimport * as effects from \"../tunes/effects\";\nimport * as synths from \"../tunes/synths\";\n\nimport AutoFilter from \"../components/effects/AutoFilter\";\nimport AutoPanner from \"../components/effects/AutoPanner\";\nimport AutoWah from \"../components/effects/AutoWah\";\nimport BitCrusher from \"../components/effects/BitCrusher\";\nimport Chebyshev from \"../components/effects/Chebyshev\";\nimport Chorus from \"../components/effects/Chorus\";\nimport Distortion from \"../components/effects/Distortion\";\nimport FeedbackDelay from \"../components/effects/FeedbackDelay\";\nimport FeedbackEffect from \"../components/effects/FeedbackEffect\";\nimport Freeverb from \"../components/effects/Freeverb\";\nimport JcReverb from \"../components/effects/JcReverb\";\nimport Phaser from \"../components/effects/Phaser\";\nimport PingPongDelay from \"../components/effects/PingPongDelay\";\nimport PitchShift from \"../components/effects/PitchShift\";\nimport Reverb from \"../components/effects/Reverb\";\nimport StereoWidener from \"../components/effects/StereoWidener\";\nimport Tremolo from \"../components/effects/Tremolo\";\nimport Vibrato from \"../components/effects/Vibrato\";\n\nimport MetalSynth from \"../components/synths/MetalSynth\";\nimport BaseSynth from \"../components/synths/BaseSynth\";\nimport PolySynth from \"../components/synths/PolySynth\";\nimport MembraneSynth from \"../components/synths/MembraneSynth\";\nimport NotesSynth from \"../components/synths/NotesSynth\";\n\nimport Volume from \"../components/synths/Volume\";\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const defaultWetValue = 0.8;\n\n    let beatSynth = synths.polySynth();\n    let beatChebyshev = effects.chebyshev();\n    let beatChorus = effects.chorus();\n    let beatVibrato = effects.vibrato();\n\n    let metalSynth = synths.metalSynth();\n    let metalDistortion = effects.distortion();\n    let metalFreeverb = effects.freeverb();\n\n    let notesSynth = synths.notesSynth();\n    let notesTremolo = effects.tremolo();\n    let notesPingPongDelay = effects.pingPongDelay();\n\n    let pluckSynth = synths.pluckSynth();\n    let pluckAutoWah = effects.autoWah();\n\n    let membraneSynth = synths.membraneSynth();\n\n    let counter;\n    let notes = synths.notes;\n    let notesBeat = synths.notesBeat;\n\n    metalSynth.chain(metalDistortion, metalFreeverb, Tone.Master);\n    beatSynth.chain(beatChebyshev, beatChorus, beatVibrato, Tone.Master);\n    membraneSynth.toMaster();\n    pluckSynth.chain(pluckAutoWah, Tone.Master);\n    notesSynth.chain(notesTremolo, notesPingPongDelay, Tone.Master);\n\n    //loops\n\n    let loop1 = new Tone.Loop(function(time) {\n      metalSynth.triggerAttackRelease();\n    });\n    loop1.mute = true;\n    loop1.start();\n\n    let loop2 = new Tone.Sequence(\n      function(time, note) {\n        notesSynth.triggerAttackRelease(note, \"8n\", time);\n      },\n      notesBeat,\n      \"3n\"\n    );\n    loop2.mute = true;\n    loop2.start();\n\n    let loop3 = new Tone.Loop(function(time, note) {\n      beatSynth.triggerAttackRelease(\"A3\", \"1m\", \"17n\");\n      pluckSynth.triggerAttackRelease(\"C4\", \"8n\", \"6n\");\n      beatSynth.triggerAttackRelease([\"Eb4\", \"Cb3\", \"Eb2\"], \"7n\");\n      beatSynth.triggerAttackRelease([\"D2\", \"A#3\", \"Db4\"], \"4n\");\n    });\n    loop3.mute = true;\n    loop3.start();\n\n    let loop4 = new Tone.Loop(function(counter, time) {\n      counter = 0;\n      if (counter % 4 === 0) {\n        membraneSynth.triggerAttackRelease(\"F3\", \"8n\");\n        beatSynth.triggerAttackRelease(\"B2\", \"4n\");\n      }\n\n      if (counter % 5 === 0) {\n        metalSynth.triggerAttackRelease(\"A#8\", \"7n\");\n        beatSynth.triggerAttackRelease(\"B1\", \"15n\");\n      }\n\n      if (counter % 2 === 0) {\n        membraneSynth.triggerAttackRelease(\"D3\", \"3n\");\n        if (counter % 13 !== 1) {\n          pluckSynth.triggerAttackRelease(\"G3\", \"8n\");\n        }\n      }\n      counter = (counter + 1) % 16;\n    });\n    loop4.mute = true;\n    loop4.start();\n\n    let loop5 = new Tone.Sequence(\n      function(time, note) {\n        notesSynth.triggerAttackRelease(note, \"4n\", time);\n      },\n      notes,\n      \"8n\"\n    );\n    loop5.mute = true;\n    loop5.start();\n\n    this.state = {\n      lastChange: Date.now(),\n      membraneSynth,\n      metalSynth,\n      notesSynth,\n      notesTremolo: {\n        name: \"notesTremolo\",\n        effect: notesTremolo,\n        wet: defaultWetValue,\n        on: false\n      },\n      notesPingPongDelay: {\n        name: \"notesPingPongDelay\",\n        effect: notesPingPongDelay,\n        wet: defaultWetValue,\n        on: false\n      },\n      metalDistortion: {\n        name: \"metalDistortion\",\n        effect: metalDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      metalFreeverb: {\n        name: \"metalFreeverb\",\n        effect: metalFreeverb,\n        wet: defaultWetValue,\n        on: false\n      },\n      pluckSynth,\n      pluckAutoWah: {\n        name: \"pluckAutoWah\",\n        effect: pluckAutoWah,\n        wet: defaultWetValue,\n        on: false\n      },\n      beatSynth,\n      beatChebyshev: {\n        name: \"beatChebyshev\",\n        effect: beatChebyshev,\n        wet: defaultWetValue,\n        on: false\n      },\n      beatChorus: {\n        name: \"beatChorus\",\n        effect: beatChorus,\n        wet: defaultWetValue,\n        on: false\n      },\n      beatVibrato: {\n        name: \"beatVibrato\",\n        effect: beatVibrato,\n        wet: defaultWetValue,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      loop5: {\n        loop: loop5,\n        on: false\n      },\n      volume: 0\n    };\n\n    _.bindAll(\n      this,\n      \"toggleLoop\",\n      \"changeSynthValue\",\n      \"changeVolumeValue\",\n      \"toggleEffect\",\n      \"changeEffectWetValue\",\n      \"changeEffectValue\"\n    );\n\n    Tone.Transport.bpm.value = 76;\n    Tone.Transport.start();\n  }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName];\n\n    if (on == true) {\n      loop.mute = true;\n    } else {\n      loop.mute = false;\n    }\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    });\n  }\n\n  changeSynthValue(synthName, effectName, value) {\n    let regexBefore = /(.*)\\./;\n    let regexAfter = /\\.(.*)/;\n    let synth = this.state[synthName];\n    let effectNameNamespace = effectName.match(regexBefore)[1];\n    let effectNameInNamespace = effectName.match(regexAfter)[1];\n    if (synthName == \"notesSynth\") {\n      if (effectNameNamespace == \"oscillator\") {\n        synth.voices[0].oscillator[effectNameInNamespace] = value;\n      } else if (effectNameNamespace == \"envelope\") {\n        synth.voices[0].envelope[effectNameInNamespace] = value;\n      }\n    } else {\n      synth[effectName] = value;\n    }\n\n    this.setState({\n      [`${synthName}`]: synth\n    });\n  }\n\n  changeVolumeValue(synthName, effectName, value) {\n    Tone.Master.volume.value = Math.round(value);\n\n    this.setState({\n      volume: Math.round(value)\n    });\n  }\n\n  toggleEffect(effectName) {\n    let { name, effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? 0 : wet;\n    on = !on;\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeEffectWetValue(effectName, effectProperty, value) {\n    let { name, effect, wet, on } = this.state[effectName];\n\n    effect[effectProperty].value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n  changeEffectValue(effectName, effectProperty, value) {\n    let { name, effect, wet, on } = this.state[effectName];\n\n    if (effectProperty == \"order\") {\n      value = Math.round(value);\n    }\n\n    effect[effectProperty] = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  render() {\n    let {\n      membraneSynth,\n      pluckSynth,\n      pluckAutoWah,\n      beatSynth,\n      beatChebyshev,\n      beatChorus,\n      beatVibrato,\n      notesSynth,\n      notesTremolo,\n      notesPingPongDelay,\n      metalSynth,\n      metalDistortion,\n      metalFreeverb,\n      loop1,\n      loop2,\n      loop3,\n      loop4,\n      loop5,\n      volume\n    } = this.state;\n\n    let {\n      toggleEffect,\n      toggleLoop,\n      changeSynthValue,\n      changeVolumeValue,\n      changeEffectWetValue,\n      changeEffectValue,\n      changeEffectFilterValue\n    } = this;\n\n    return (\n      <div className=\"container\">\n        <div className=\"dikiy\">\n          Dikiy Dance Dikiy Dance Dikiy Dance Dikiy Dance Dikiy Dance\n        </div>\n        <div className=\"common\">\n          <Volume volume={volume} changeVolumeValue={changeVolumeValue} />\n        </div>\n        <div className=\"yellowSynth\">\n          <div className=\"text swipe\">\n            <span>&#8593;</span>Swipe\n          </div>\n          <div className=\"text click\">\n            <span>&#8593;</span>Click\n          </div>\n          <MetalSynth\n            synth=\"metalSynth\"\n            instrument={metalSynth}\n            on={loop1.on}\n            togglePlay={() => toggleLoop(\"loop1\")}\n            changeSynthValue={this.changeSynthValue}\n          />\n          <Distortion\n            {...metalDistortion}\n            toggleEffect={() => toggleEffect(\"metalDistortion\")}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <Freeverb\n            {...metalFreeverb}\n            toggleEffect={() => toggleEffect(\"metalFreeverb\")}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n        </div>\n\n        <div className=\"redSynth\">\n          <div className=\"text onOf\">\n            <span>&#8593;</span> ON/OF\n          </div>\n          <div className=\"text swipe\">\n            <span>&#8593;</span> Swipe\n          </div>\n          <div className=\"text click\">\n            <span>&#8593;</span> Click\n          </div>\n          <div className=\"text click2\">\n            <span>&#8593;</span> Click\n          </div>\n          <NotesSynth\n            synth=\"notesSynth\"\n            instrument={notesSynth}\n            on={loop5.on}\n            togglePlay={() => toggleLoop(\"loop5\")}\n            changeSynthValue={this.changeSynthValue}\n          />\n          <Tremolo\n            {...notesTremolo}\n            toggleEffect={() => toggleEffect(\"notesTremolo\")}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <PingPongDelay\n            {...notesPingPongDelay}\n            toggleEffect={() => toggleEffect(\"notesPingPongDelay\")}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n        </div>\n\n        <div className=\"whiteSynth\">\n          <div className=\"text onOf\">\n            <span>&#8593;</span>ON/OF\n          </div>\n          <div className=\"text swipe\">\n            <span>&#8593;</span>Swipe\n          </div>\n          <div className=\"text spin\">\n            <span>&#8593;</span>Spin\n          </div>\n          <div className=\"text click\">\n            <span>&#8593;</span>Click\n          </div>\n          <div className=\"text swipe2\">\n            <span>&#8593;</span>Swipe\n          </div>\n          <PolySynth\n            synth=\"beatSynth\"\n            instrument={beatSynth}\n            on={loop3.on}\n            togglePlay={() => toggleLoop(\"loop3\")}\n            changeSynthValue={this.changeSynthValue}\n          />\n          <Chebyshev\n            {...beatChebyshev}\n            toggleEffect={() => toggleEffect(\"beatChebyshev\")}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <Chorus\n            {...beatChorus}\n            toggleEffect={() => toggleEffect(\"beatChorus\")}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n          <Vibrato\n            {...beatVibrato}\n            toggleEffect={() => toggleEffect(\"beatVibrato\")}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n        </div>\n        <div className=\"darkSynth\">\n          <div className=\"text spin\">\n            <span>&#8593;</span>Spin\n          </div>\n          <div className=\"text click\">\n            <span>&#8593;</span>Click\n          </div>\n          <BaseSynth\n            synth=\"pluckSynth\"\n            instrument={pluckSynth}\n            on={loop2.on}\n            togglePlay={() => toggleLoop(\"loop2\")}\n            changeSynthValue={this.changeSynthValue}\n          />\n          <AutoWah\n            {...pluckAutoWah}\n            toggleEffect={() => toggleEffect(\"pluckAutoWah\")}\n            changeEffectWetValue={changeEffectWetValue}\n            changeEffectValue={changeEffectValue}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}