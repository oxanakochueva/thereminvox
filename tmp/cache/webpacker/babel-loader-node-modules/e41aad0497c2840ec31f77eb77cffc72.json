{"ast":null,"code":"var _jsxFileName = \"/Users/oxana/thereminvox/app/javascript/components/controls/ToggleSwitch.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nvar ToggleSwitch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ToggleSwitch, _React$Component);\n\n  function ToggleSwitch(props) {\n    var _this;\n\n    _classCallCheck(this, ToggleSwitch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToggleSwitch).call(this, props));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ToggleSwitch, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      console.log('clicked');\n      var value = this.props.value;\n      this.props.handleClick(value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          current = _this$props.current,\n          value = _this$props.value;\n      var classes = classnames(_defineProperty({\n        ToggleSwitch: true,\n        on: current\n      }, \"\".concat(value), true));\n      return React.createElement(\"div\", {\n        className: classes,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, value);\n    }\n  }]);\n\n  return ToggleSwitch;\n}(React.Component);\n\nexport { ToggleSwitch as default };","map":{"version":3,"sources":["/Users/oxana/thereminvox/app/javascript/components/controls/ToggleSwitch.jsx"],"names":["React","classnames","ToggleSwitch","props","handleClick","bind","console","log","value","current","classes","on","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;IAEqBC,Y;;;;;AACnB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAFiB;AAGlB;;;;kCAEa;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AADY,UAEJC,KAFI,GAEM,KAAKL,KAFX,CAEJK,KAFI;AAGZ,WAAKL,KAAL,CAAWC,WAAX,CAAuBI,KAAvB;AACD;;;6BAEQ;AAAA,wBACoB,KAAKL,KADzB;AAAA,UACCM,OADD,eACCA,OADD;AAAA,UACUD,KADV,eACUA,KADV;AAGP,UAAME,OAAO,GAAGT,UAAU;AACxBC,QAAAA,YAAY,EAAE,IADU;AAExBS,QAAAA,EAAE,EAAEF;AAFoB,mBAGpBD,KAHoB,GAGV,IAHU,EAA1B;AAMA,aACE;AAAK,QAAA,SAAS,EAAEE,OAAhB;AAAyB,QAAA,OAAO,EAAE,KAAKN,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGI,KADH,CADF;AAKD;;;;EA1BuCR,KAAK,CAACY,S;;SAA3BV,Y","sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\n\nexport default class ToggleSwitch extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() {\n    console.log('clicked')\n    const { value } = this.props\n    this.props.handleClick(value)\n  }\n\n  render() {\n    const { current, value } = this.props\n\n    const classes = classnames({\n      ToggleSwitch: true,\n      on: current,\n      [`${value}`]: true\n    })\n\n    return (\n      <div className={classes} onClick={this.handleClick}>\n        {value}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}