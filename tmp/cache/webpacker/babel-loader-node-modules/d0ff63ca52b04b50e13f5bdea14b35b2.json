{"ast":null,"code":"import Tone from 'tone';\n\nfunction pluckSynth() {\n  return new Tone.PluckSynth({\n    attackNoise: 0.1,\n    dampening: 1500,\n    resonance: 0.9\n  });\n}\n\nfunction metalSynth() {\n  return new Tone.MetalSynth({\n    frequency: 2500,\n    envelope: {\n      attack: 0.01,\n      decay: 0.2,\n      release: 0.08\n    },\n    harmonicity: 3,\n    modulationIndex: 16,\n    resonance: 7000,\n    octaves: 0.5\n  });\n}\n\nfunction polySynth() {\n  return new Tone.PolySynth(3, Tone.Synth, {\n    oscillator: {\n      type: 'sine',\n      count: 13,\n      spread: 7,\n      phase: 5,\n      fadeIn: 6\n    },\n    envelope: {\n      attack: 0.9,\n      decay: 1,\n      sustain: 1,\n      release: 3,\n      attackCurve: 'sine'\n    }\n  });\n}\n\nfunction notesSynth() {\n  return new Tone.PolySynth(4, Tone.Synth, {\n    oscillator: {\n      type: 'sine',\n      count: 5,\n      spread: 16,\n      phase: 9,\n      fadeIn: 2\n    },\n    envelope: {\n      attack: 0.5,\n      decay: 1,\n      sustain: 1,\n      release: 5,\n      attackCurve: 'linear'\n    }\n  });\n}\n\nfunction noiseSynth() {\n  return new Tone.NoiseSynth({\n    noiseSynth: {\n      type: 'brown'\n    },\n    envelope: {\n      attack: 1.5,\n      decay: 0.01,\n      sustain: 1\n    }\n  });\n}\n\nfunction membraneSynth() {\n  return new Tone.MembraneSynth({\n    pitchDecay: 0.05,\n    octaves: 10,\n    oscillator: {\n      type: 'sine'\n    },\n    envelope: {\n      attack: 0.001,\n      decay: 0.4,\n      sustain: 0.01,\n      release: 1.4,\n      attackCurve: 'exponential'\n    }\n  });\n}\n\nexport { metalSynth, pluckSynth, polySynth, notesSynth, membraneSynth, noiseSynth };","map":{"version":3,"sources":["/Users/oxana/thereminvox/app/javascript/tunes/synths.jsx"],"names":["Tone","pluckSynth","PluckSynth","attackNoise","dampening","resonance","metalSynth","MetalSynth","frequency","envelope","attack","decay","release","harmonicity","modulationIndex","octaves","polySynth","PolySynth","Synth","oscillator","type","count","spread","phase","fadeIn","sustain","attackCurve","notesSynth","noiseSynth","NoiseSynth","membraneSynth","MembraneSynth","pitchDecay"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAEA,SAASC,UAAT,GAAsB;AACpB,SAAO,IAAID,IAAI,CAACE,UAAT,CAAoB;AACzBC,IAAAA,WAAW,EAAE,GADY;AAEzBC,IAAAA,SAAS,EAAE,IAFc;AAGzBC,IAAAA,SAAS,EAAE;AAHc,GAApB,CAAP;AAKD;;AAED,SAASC,UAAT,GAAsB;AACpB,SAAO,IAAIN,IAAI,CAACO,UAAT,CAAoB;AACzBC,IAAAA,SAAS,EAAE,IADc;AAEzBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,IADA;AAERC,MAAAA,KAAK,EAAE,GAFC;AAGRC,MAAAA,OAAO,EAAE;AAHD,KAFe;AAOzBC,IAAAA,WAAW,EAAE,CAPY;AAQzBC,IAAAA,eAAe,EAAE,EARQ;AASzBT,IAAAA,SAAS,EAAE,IATc;AAUzBU,IAAAA,OAAO,EAAE;AAVgB,GAApB,CAAP;AAYD;;AAED,SAASC,SAAT,GAAqB;AACnB,SAAO,IAAIhB,IAAI,CAACiB,SAAT,CAAmB,CAAnB,EAAsBjB,IAAI,CAACkB,KAA3B,EAAkC;AACvCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,MADI;AAEVC,MAAAA,KAAK,EAAE,EAFG;AAGVC,MAAAA,MAAM,EAAE,CAHE;AAIVC,MAAAA,KAAK,EAAE,CAJG;AAKVC,MAAAA,MAAM,EAAE;AALE,KAD2B;AAQvCf,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,GADA;AAERC,MAAAA,KAAK,EAAE,CAFC;AAGRc,MAAAA,OAAO,EAAE,CAHD;AAIRb,MAAAA,OAAO,EAAE,CAJD;AAKRc,MAAAA,WAAW,EAAE;AALL;AAR6B,GAAlC,CAAP;AAgBD;;AAED,SAASC,UAAT,GAAsB;AACpB,SAAO,IAAI3B,IAAI,CAACiB,SAAT,CAAmB,CAAnB,EAAsBjB,IAAI,CAACkB,KAA3B,EAAkC;AACvCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,MADI;AAEVC,MAAAA,KAAK,EAAE,CAFG;AAGVC,MAAAA,MAAM,EAAE,EAHE;AAIVC,MAAAA,KAAK,EAAE,CAJG;AAKVC,MAAAA,MAAM,EAAE;AALE,KAD2B;AAQvCf,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,GADA;AAERC,MAAAA,KAAK,EAAE,CAFC;AAGRc,MAAAA,OAAO,EAAE,CAHD;AAIRb,MAAAA,OAAO,EAAE,CAJD;AAKRc,MAAAA,WAAW,EAAE;AALL;AAR6B,GAAlC,CAAP;AAgBD;;AAED,SAASE,UAAT,GAAsB;AACpB,SAAO,IAAI5B,IAAI,CAAC6B,UAAT,CAAoB;AACzBD,IAAAA,UAAU,EAAE;AACVR,MAAAA,IAAI,EAAE;AADI,KADa;AAIzBX,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,GADA;AAERC,MAAAA,KAAK,EAAE,IAFC;AAGRc,MAAAA,OAAO,EAAE;AAHD;AAJe,GAApB,CAAP;AAUD;;AAED,SAASK,aAAT,GAAyB;AACvB,SAAO,IAAI9B,IAAI,CAAC+B,aAAT,CAAuB;AAC5BC,IAAAA,UAAU,EAAE,IADgB;AAE5BjB,IAAAA,OAAO,EAAE,EAFmB;AAG5BI,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AADI,KAHgB;AAM5BX,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,KADA;AAERC,MAAAA,KAAK,EAAE,GAFC;AAGRc,MAAAA,OAAO,EAAE,IAHD;AAIRb,MAAAA,OAAO,EAAE,GAJD;AAKRc,MAAAA,WAAW,EAAE;AALL;AANkB,GAAvB,CAAP;AAcD;;AAED,SACEpB,UADF,EAEEL,UAFF,EAGEe,SAHF,EAIEW,UAJF,EAKEG,aALF,EAMEF,UANF","sourcesContent":["import Tone from 'tone'\n\nfunction pluckSynth() {\n  return new Tone.PluckSynth({\n    attackNoise: 0.1,\n    dampening: 1500,\n    resonance: 0.9\n  })\n}\n\nfunction metalSynth() {\n  return new Tone.MetalSynth({\n    frequency: 2500,\n    envelope: {\n      attack: 0.01,\n      decay: 0.2,\n      release: 0.08\n    },\n    harmonicity: 3,\n    modulationIndex: 16,\n    resonance: 7000,\n    octaves: 0.5\n  })\n}\n\nfunction polySynth() {\n  return new Tone.PolySynth(3, Tone.Synth, {\n    oscillator: {\n      type: 'sine',\n      count: 13,\n      spread: 7,\n      phase: 5,\n      fadeIn: 6\n    },\n    envelope: {\n      attack: 0.9,\n      decay: 1,\n      sustain: 1,\n      release: 3,\n      attackCurve: 'sine'\n    }\n  })\n}\n\nfunction notesSynth() {\n  return new Tone.PolySynth(4, Tone.Synth, {\n    oscillator: {\n      type: 'sine',\n      count: 5,\n      spread: 16,\n      phase: 9,\n      fadeIn: 2\n    },\n    envelope: {\n      attack: 0.5,\n      decay: 1,\n      sustain: 1,\n      release: 5,\n      attackCurve: 'linear'\n    }\n  })\n}\n\nfunction noiseSynth() {\n  return new Tone.NoiseSynth({\n    noiseSynth: {\n      type: 'brown'\n    },\n    envelope: {\n      attack: 1.5,\n      decay: 0.01,\n      sustain: 1\n    }\n  })\n}\n\nfunction membraneSynth() {\n  return new Tone.MembraneSynth({\n    pitchDecay: 0.05,\n    octaves: 10,\n    oscillator: {\n      type: 'sine'\n    },\n    envelope: {\n      attack: 0.001,\n      decay: 0.4,\n      sustain: 0.01,\n      release: 1.4,\n      attackCurve: 'exponential'\n    }\n  })\n}\n\nexport {\n  metalSynth,\n  pluckSynth,\n  polySynth,\n  notesSynth,\n  membraneSynth,\n  noiseSynth\n}\n"]},"metadata":{},"sourceType":"module"}