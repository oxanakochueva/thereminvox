{"ast":null,"code":"var _jsxFileName = \"/Users/oxana/thereminvox/app/javascript/containers/Synth.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport Tone from 'tone';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 1,\n      oversample: '4x',\n      wet: 0\n    });\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: 'sine',\n      depth: 1\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n    var feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '4n',\n      maxDelay: 0.8\n    });\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    });\n    var phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n    var pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    });\n    var pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n    var reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    });\n    var stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    });\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 0.5,\n      spread: 180\n    });\n    var vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    });\n    _this.state = {\n      distortion: distortion,\n      distortionIsOn: false,\n      autoFilter: autoFilter,\n      autoFilterIsOn: false,\n      autoPanner: autoPanner,\n      autoPannerIsOn: false,\n      autoWah: autoWah,\n      autoWahIsOn: false,\n      bitCrusher: bitCrusher,\n      bitCrusherIsOn: false,\n      chebyshev: chebyshev,\n      chebyshevIsOn: false,\n      chorus: chorus,\n      chorusIsOn: false,\n      convolver: convolver,\n      convolverIsOn: false,\n      feedbackDelay: feedbackDelay,\n      feedbackDelayIsOn: false,\n      feedbackEffect: feedbackEffect,\n      feedbackEffectIsOn: false,\n      freeverb: freeverb,\n      freeverbIsOn: false,\n      jcReverb: jcReverb,\n      jcReverbIsOn: false,\n      phaser: phaser,\n      phaserIsOn: false,\n      pingPongDelay: pingPongDelay,\n      pingPongDelayIsOn: false,\n      pitchShift: pitchShift,\n      pitchShiftIsOn: false,\n      reverb: reverb,\n      reverbIsOn: false,\n      stereoWidener: stereoWidener,\n      stereoWidenerIsOn: false,\n      tremolo: tremolo,\n      tremoloIsOn: false,\n      vibrato: vibrato,\n      vibratoIsOn: false\n    };\n    _this.startSynth = _this.startSynth.bind(_assertThisInitialized(_this));\n    _this.toggleFilter = _this.toggleFilter.bind(_assertThisInitialized(_this));\n    _this.toggleFeedbackDelay = _this.toggleFeedbackDelay.bind(_assertThisInitialized(_this));\n    _this.toggleTremolo = _this.toggleTremolo.bind(_assertThisInitialized(_this));\n    _this.toggleDistortion = _this.toggleDistortion.bind(_assertThisInitialized(_this));\n    _this.toggleDistortion100 = _this.toggleDistortion100.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"startSynth\",\n    value: function startSynth() {\n      var synth = new Tone.Synth(); //.toMaster()\n\n      synth.chain(this.state.distortion, this.state.autoFilter, this.state.autoPanner, this.state.autoWah, this.state.bitCrusher, this.state.chebyshev, this.state.chorus, this.state.convolver, this.state.feedbackDelay, this.state.feedbackEffect, this.state.freeverb, this.state.jcReverb, this.state.phaser, this.state.pingPongDelay, this.state.pitchShift, this.state.reverb, this.state.stereoWidener, this.state.tremolo, this.state.vibrato, Tone.Master);\n      this.setState({\n        synth: synth\n      });\n      var loop = new Tone.Loop(function (time) {\n        synth.triggerAttackRelease('C2', '8n', time);\n      }, '4n');\n      loop.start('0m').stop('16m');\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"toggleFilter\",\n    value: function toggleFilter() {\n      var autoFilter = new Tone.AutoFilter({\n        frequency: 1,\n        type: 'sine',\n        depth: 1,\n        baseFrequency: 200,\n        octaves: 2.6,\n        filter: {\n          type: 'lowpass',\n          rolloff: -12,\n          Q: 1\n        }\n      }).toMaster();\n      this.setState({\n        autoFilter: autoFilter\n      }); // let { synth } = this.state.synth.connect(autoFilter)\n    }\n  }, {\n    key: \"toggleFeedbackDelay\",\n    value: function toggleFeedbackDelay() {\n      var feedbackDelay1 = new Tone.FeedbackDelay({\n        delayTime: '32n',\n        maxDelay: 0.8\n      }).toMaster();\n      var feedbackDelay2 = new Tone.FeedbackDelay({\n        delayTime: '8n',\n        maxDelay: 0.8\n      }).toMaster();\n      this.state.synth.connect(feedbackDelay1);\n      this.state.synth.connect(feedbackDelay2);\n    }\n  }, {\n    key: \"toggleTremolo\",\n    value: function toggleTremolo() {\n      if (this.state.tremoloIsOn == true) {\n        // this.state.synth.disconnect()\n        // this.state.synth.chain(Tone.Master)\n        this.state.tremolo.wet.value = 0;\n        this.setState({\n          tremoloIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.tremolo, Tone.Master);\n        this.state.tremolo.wet.value = 1;\n      }\n\n      this.setState({\n        distortionIsOn: true\n      }); // let tremolo = new Tone.Tremolo({\n      //   frequency: 10,\n      //   type: 'sine',\n      //   depth: 2,\n      //   spread: 180\n      // }).toMaster()\n      //\n      // this.state.synth.connect(tremolo)\n    }\n  }, {\n    key: \"toggleDistortion\",\n    value: function toggleDistortion() {\n      console.log('toggle');\n\n      if (this.state.distortionIsOn == true) {\n        // this.state.synth.disconnect()\n        // this.state.synth.chain(Tone.Master)\n        this.state.distortion.wet.value = 0;\n        this.setState({\n          distortionIsOn: false\n        });\n      } else {\n        this.state.synth.chain(this.state.distortion, Tone.Master);\n        this.state.distortion.wet.value = 1;\n      }\n\n      this.setState({\n        distortionIsOn: true\n      });\n    }\n  }, {\n    key: \"toggleDistortion100\",\n    value: function toggleDistortion100() {\n      var distortion = this.state.distortion;\n      distortion.distortion = 100;\n      this.setState({\n        distortion: distortion\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.startSynth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"div\", {\n        onClick: this.toggleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"Filter\"), React.createElement(\"div\", {\n        onClick: this.toggleFeedbackDelay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"Feedback Delay\"), React.createElement(\"div\", {\n        onClick: this.toggleTremolo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"Tremolo\"), React.createElement(\"div\", {\n        onClick: this.toggleDistortion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Distortion \", this.state.distortionIsOn), React.createElement(\"div\", {\n        onClick: this.toggleDistortion100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"Distortion 100\"));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/oxana/thereminvox/app/javascript/containers/Synth.jsx"],"names":["React","Tone","Synth","props","distortion","Distortion","oversample","wet","autoFilter","AutoFilter","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","autoPanner","AutoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","BitCrusher","bits","chebyshev","Chebyshev","order","chorus","Chorus","delayTime","spread","convolver","Convolver","onload","noOp","normalize","feedbackDelay","FeedbackDelay","maxDelay","feedbackEffect","FeedbackEffect","feedback","freeverb","Freeverb","roomSize","dampening","jcReverb","JCReverb","phaser","Phaser","stages","pingPongDelay","PingPongDelay","maxDelayTime","pitchShift","PitchShift","pitch","windowSize","reverb","Reverb","decay","preDelay","stereoWidener","StereoWidener","width","tremolo","Tremolo","vibrato","Vibrato","state","distortionIsOn","autoFilterIsOn","autoPannerIsOn","autoWahIsOn","bitCrusherIsOn","chebyshevIsOn","chorusIsOn","convolverIsOn","feedbackDelayIsOn","feedbackEffectIsOn","freeverbIsOn","jcReverbIsOn","phaserIsOn","pingPongDelayIsOn","pitchShiftIsOn","reverbIsOn","stereoWidenerIsOn","tremoloIsOn","vibratoIsOn","startSynth","bind","toggleFilter","toggleFeedbackDelay","toggleTremolo","toggleDistortion","toggleDistortion100","synth","chain","Master","setState","loop","Loop","time","triggerAttackRelease","start","stop","Transport","bpm","value","toMaster","feedbackDelay1","feedbackDelay2","connect","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Tone from 'tone'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let distortion = new Tone.Distortion({\n      distortion: 1,\n      oversample: '4x',\n      wet: 0\n    })\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    })\n\n    let autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: 'sine',\n      depth: 1\n    })\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    })\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    })\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    })\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    })\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    })\n\n    var feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '4n',\n      maxDelay: 0.8\n    })\n\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    })\n\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    })\n\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    })\n\n    let phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    })\n\n    let pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    })\n\n    let pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    })\n\n    let reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    })\n\n    let stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    })\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 0.5,\n      spread: 180\n    })\n\n    let vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    })\n\n    this.state = {\n      distortion: distortion,\n      distortionIsOn: false,\n      autoFilter: autoFilter,\n      autoFilterIsOn: false,\n      autoPanner: autoPanner,\n      autoPannerIsOn: false,\n      autoWah: autoWah,\n      autoWahIsOn: false,\n      bitCrusher: bitCrusher,\n      bitCrusherIsOn: false,\n      chebyshev: chebyshev,\n      chebyshevIsOn: false,\n      chorus: chorus,\n      chorusIsOn: false,\n      convolver: convolver,\n      convolverIsOn: false,\n      feedbackDelay: feedbackDelay,\n      feedbackDelayIsOn: false,\n      feedbackEffect: feedbackEffect,\n      feedbackEffectIsOn: false,\n      freeverb: freeverb,\n      freeverbIsOn: false,\n      jcReverb: jcReverb,\n      jcReverbIsOn: false,\n      phaser: phaser,\n      phaserIsOn: false,\n      pingPongDelay: pingPongDelay,\n      pingPongDelayIsOn: false,\n      pitchShift: pitchShift,\n      pitchShiftIsOn: false,\n      reverb: reverb,\n      reverbIsOn: false,\n      stereoWidener: stereoWidener,\n      stereoWidenerIsOn: false,\n      tremolo: tremolo,\n      tremoloIsOn: false,\n      vibrato: vibrato,\n      vibratoIsOn: false\n    }\n\n    this.startSynth = this.startSynth.bind(this)\n    this.toggleFilter = this.toggleFilter.bind(this)\n    this.toggleFeedbackDelay = this.toggleFeedbackDelay.bind(this)\n    this.toggleTremolo = this.toggleTremolo.bind(this)\n    this.toggleDistortion = this.toggleDistortion.bind(this)\n    this.toggleDistortion100 = this.toggleDistortion100.bind(this)\n  }\n\n  startSynth() {\n    let synth = new Tone.Synth() //.toMaster()\n    synth.chain(\n      this.state.distortion,\n      this.state.autoFilter,\n      this.state.autoPanner,\n      this.state.autoWah,\n      this.state.bitCrusher,\n      this.state.chebyshev,\n      this.state.chorus,\n      this.state.convolver,\n      this.state.feedbackDelay,\n      this.state.feedbackEffect,\n      this.state.freeverb,\n      this.state.jcReverb,\n      this.state.phaser,\n      this.state.pingPongDelay,\n      this.state.pitchShift,\n      this.state.reverb,\n      this.state.stereoWidener,\n      this.state.tremolo,\n      this.state.vibrato,\n      Tone.Master\n    )\n\n    this.setState({\n      synth: synth\n    })\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('C2', '8n', time)\n    }, '4n')\n\n    loop.start('0m').stop('16m')\n\n    Tone.Transport.bpm.value = 115\n    Tone.Transport.start()\n  }\n\n  toggleFilter() {\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    }).toMaster()\n\n    this.setState({\n      autoFilter: autoFilter\n    })\n\n    // let { synth } = this.state.synth.connect(autoFilter)\n  }\n\n  toggleFeedbackDelay() {\n    let feedbackDelay1 = new Tone.FeedbackDelay({\n      delayTime: '32n',\n      maxDelay: 0.8\n    }).toMaster()\n\n    let feedbackDelay2 = new Tone.FeedbackDelay({\n      delayTime: '8n',\n      maxDelay: 0.8\n    }).toMaster()\n\n    this.state.synth.connect(feedbackDelay1)\n    this.state.synth.connect(feedbackDelay2)\n  }\n\n  toggleTremolo() {\n    if (this.state.tremoloIsOn == true) {\n      // this.state.synth.disconnect()\n      // this.state.synth.chain(Tone.Master)\n\n      this.state.tremolo.wet.value = 0\n\n      this.setState({\n        tremoloIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.tremolo, Tone.Master)\n      this.state.tremolo.wet.value = 1\n    }\n\n    this.setState({\n      distortionIsOn: true\n    })\n    // let tremolo = new Tone.Tremolo({\n    //   frequency: 10,\n    //   type: 'sine',\n    //   depth: 2,\n    //   spread: 180\n    // }).toMaster()\n    //\n    // this.state.synth.connect(tremolo)\n  }\n\n  toggleDistortion() {\n    console.log('toggle')\n    if (this.state.distortionIsOn == true) {\n      // this.state.synth.disconnect()\n      // this.state.synth.chain(Tone.Master)\n\n      this.state.distortion.wet.value = 0\n\n      this.setState({\n        distortionIsOn: false\n      })\n    } else {\n      this.state.synth.chain(this.state.distortion, Tone.Master)\n      this.state.distortion.wet.value = 1\n    }\n\n    this.setState({\n      distortionIsOn: true\n    })\n  }\n\n  toggleDistortion100() {\n    let { distortion } = this.state\n    distortion.distortion = 100\n\n    this.setState({\n      distortion: distortion\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div onClick={this.startSynth}>Start</div>\n        <div onClick={this.toggleFilter}>Filter</div>\n        <div onClick={this.toggleFeedbackDelay}>Feedback Delay</div>\n        <div onClick={this.toggleTremolo}>Tremolo</div>\n        <div onClick={this.toggleDistortion}>\n          Distortion {this.state.distortionIsOn}\n        </div>\n        <div onClick={this.toggleDistortion100}>Distortion 100</div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}