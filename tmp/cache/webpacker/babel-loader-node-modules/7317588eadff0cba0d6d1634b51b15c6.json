{"ast":null,"code":"import Tone from 'tone';\n\nfunction baseSynth() {\n  return new Tone.Synth({\n    oscillator: {\n      type: 'triangle'\n    },\n    envelope: {\n      attack: 0.005,\n      decay: 0.1,\n      sustain: 0.3,\n      release: 1\n    }\n  });\n}\n\nfunction metalSynth() {\n  return new Tone.MetalSynth(1, {\n    frequency: 2500,\n    envelope: {\n      attack: 0.01,\n      decay: 0.2,\n      release: 0.08\n    },\n    harmonicity: 3,\n    modulationIndex: 16,\n    resonance: 7000,\n    octaves: 0.5\n  });\n}\n\nfunction polySynth() {\n  return new Tone.PolySynth(1, Tone.Synth, {\n    oscillator: {\n      type: 'fatsawtooth',\n      count: 3,\n      spread: 30,\n      phase: 10,\n      fadeIn: 4\n    },\n    envelope: {\n      attack: 0.3,\n      decay: 1,\n      sustain: 1,\n      release: 5,\n      attackCurve: 'exponential'\n    }\n  });\n}\n\nfunction noiseSynth() {\n  return new Tone.NoiseSynth({\n    noiseSynth: {\n      type: 'brown'\n    },\n    envelope: {\n      attack: 1.5,\n      decay: 0.01,\n      sustain: 1\n    }\n  });\n}\n\nfunction partSynth() {\n  return new Tone.PolySynth({\n    oscillator: {\n      type: 'fatsawtooth',\n      count: 3,\n      spread: 30,\n      phase: 10,\n      fadeIn: 4\n    },\n    envelope: {\n      attack: 0.3,\n      decay: 1,\n      sustain: 1,\n      release: 5,\n      attackCurve: 'exponential'\n    }\n  });\n}\n\nexport { metalSynth, baseSynth };","map":{"version":3,"sources":["/Users/oxana/thereminvox/app/javascript/tunes/synths.jsx"],"names":["Tone","baseSynth","Synth","oscillator","type","envelope","attack","decay","sustain","release","metalSynth","MetalSynth","frequency","harmonicity","modulationIndex","resonance","octaves","polySynth","PolySynth","count","spread","phase","fadeIn","attackCurve","noiseSynth","NoiseSynth","partSynth"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAEA,SAASC,SAAT,GAAqB;AACnB,SAAO,IAAID,IAAI,CAACE,KAAT,CAAe;AACpBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AADI,KADQ;AAIpBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,KADA;AAERC,MAAAA,KAAK,EAAE,GAFC;AAGRC,MAAAA,OAAO,EAAE,GAHD;AAIRC,MAAAA,OAAO,EAAE;AAJD;AAJU,GAAf,CAAP;AAWD;;AAED,SAASC,UAAT,GAAsB;AACpB,SAAO,IAAIV,IAAI,CAACW,UAAT,CAAoB,CAApB,EAAuB;AAC5BC,IAAAA,SAAS,EAAE,IADiB;AAE5BP,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,IADA;AAERC,MAAAA,KAAK,EAAE,GAFC;AAGRE,MAAAA,OAAO,EAAE;AAHD,KAFkB;AAO5BI,IAAAA,WAAW,EAAE,CAPe;AAQ5BC,IAAAA,eAAe,EAAE,EARW;AAS5BC,IAAAA,SAAS,EAAE,IATiB;AAU5BC,IAAAA,OAAO,EAAE;AAVmB,GAAvB,CAAP;AAYD;;AAED,SAASC,SAAT,GAAqB;AACnB,SAAO,IAAIjB,IAAI,CAACkB,SAAT,CAAmB,CAAnB,EAAsBlB,IAAI,CAACE,KAA3B,EAAkC;AACvCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,aADI;AAEVe,MAAAA,KAAK,EAAE,CAFG;AAGVC,MAAAA,MAAM,EAAE,EAHE;AAIVC,MAAAA,KAAK,EAAE,EAJG;AAKVC,MAAAA,MAAM,EAAE;AALE,KAD2B;AAQvCjB,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,GADA;AAERC,MAAAA,KAAK,EAAE,CAFC;AAGRC,MAAAA,OAAO,EAAE,CAHD;AAIRC,MAAAA,OAAO,EAAE,CAJD;AAKRc,MAAAA,WAAW,EAAE;AALL;AAR6B,GAAlC,CAAP;AAgBD;;AAED,SAASC,UAAT,GAAsB;AACpB,SAAO,IAAIxB,IAAI,CAACyB,UAAT,CAAoB;AACzBD,IAAAA,UAAU,EAAE;AACVpB,MAAAA,IAAI,EAAE;AADI,KADa;AAIzBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,GADA;AAERC,MAAAA,KAAK,EAAE,IAFC;AAGRC,MAAAA,OAAO,EAAE;AAHD;AAJe,GAApB,CAAP;AAUD;;AAED,SAASkB,SAAT,GAAqB;AACnB,SAAO,IAAI1B,IAAI,CAACkB,SAAT,CAAmB;AACxBf,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,aADI;AAEVe,MAAAA,KAAK,EAAE,CAFG;AAGVC,MAAAA,MAAM,EAAE,EAHE;AAIVC,MAAAA,KAAK,EAAE,EAJG;AAKVC,MAAAA,MAAM,EAAE;AALE,KADY;AAQxBjB,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,GADA;AAERC,MAAAA,KAAK,EAAE,CAFC;AAGRC,MAAAA,OAAO,EAAE,CAHD;AAIRC,MAAAA,OAAO,EAAE,CAJD;AAKRc,MAAAA,WAAW,EAAE;AALL;AARc,GAAnB,CAAP;AAgBD;;AAED,SAASb,UAAT,EAAqBT,SAArB","sourcesContent":["import Tone from 'tone'\n\nfunction baseSynth() {\n  return new Tone.Synth({\n    oscillator: {\n      type: 'triangle'\n    },\n    envelope: {\n      attack: 0.005,\n      decay: 0.1,\n      sustain: 0.3,\n      release: 1\n    }\n  })\n}\n\nfunction metalSynth() {\n  return new Tone.MetalSynth(1, {\n    frequency: 2500,\n    envelope: {\n      attack: 0.01,\n      decay: 0.2,\n      release: 0.08\n    },\n    harmonicity: 3,\n    modulationIndex: 16,\n    resonance: 7000,\n    octaves: 0.5\n  })\n}\n\nfunction polySynth() {\n  return new Tone.PolySynth(1, Tone.Synth, {\n    oscillator: {\n      type: 'fatsawtooth',\n      count: 3,\n      spread: 30,\n      phase: 10,\n      fadeIn: 4\n    },\n    envelope: {\n      attack: 0.3,\n      decay: 1,\n      sustain: 1,\n      release: 5,\n      attackCurve: 'exponential'\n    }\n  })\n}\n\nfunction noiseSynth() {\n  return new Tone.NoiseSynth({\n    noiseSynth: {\n      type: 'brown'\n    },\n    envelope: {\n      attack: 1.5,\n      decay: 0.01,\n      sustain: 1\n    }\n  })\n}\n\nfunction partSynth() {\n  return new Tone.PolySynth({\n    oscillator: {\n      type: 'fatsawtooth',\n      count: 3,\n      spread: 30,\n      phase: 10,\n      fadeIn: 4\n    },\n    envelope: {\n      attack: 0.3,\n      decay: 1,\n      sustain: 1,\n      release: 5,\n      attackCurve: 'exponential'\n    }\n  })\n}\n\nexport { metalSynth, baseSynth }\n"]},"metadata":{},"sourceType":"module"}