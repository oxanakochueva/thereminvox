{"ast":null,"code":"var _jsxFileName = \"/Users/oxana/thereminvox/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport 'whatwg-fetch';\nimport * as effects from '../tunes/effects';\nimport * as parts from '../tunes/parts';\nimport * as synths from '../tunes/synths';\nimport AutoFilter from '../components/effects/AutoFilter';\nimport AutoPanner from '../components/effects/AutoPanner';\nimport AutoWah from '../components/effects/AutoWah';\nimport BitCrusher from '../components/effects/BitCrusher';\nimport Chebyshev from '../components/effects/Chebyshev';\nimport Chorus from '../components/effects/Chorus';\nimport Distortion from '../components/effects/Distortion';\nimport FeedbackDelay from '../components/effects/FeedbackDelay';\nimport FeedbackEffect from '../components/effects/FeedbackEffect';\nimport Freeverb from '../components/effects/Freeverb';\nimport JcReverb from '../components/effects/JcReverb';\nimport Phaser from '../components/effects/Phaser';\nimport PingPongDelay from '../components/effects/PingPongDelay';\nimport PitchShift from '../components/effects/PitchShift';\nimport Reverb from '../components/effects/Reverb';\nimport StereoWidener from '../components/effects/StereoWidener';\nimport Tremolo from '../components/effects/Tremolo';\nimport Vibrato from '../components/effects/Vibrato';\nimport MetalSynth from '../components/synths/MetalSynth';\nimport BaseSynth from '../components/synths/BaseSynth';\nimport PartSynth from '../components/synths/PartSynth';\nimport PolySynth from '../components/synths/PolySynth';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var defaultWetValue = 0.8;\n    var baseSynth = synths.baseSynth();\n    var metalSynth = synths.metalSynth();\n    var metalDistortion = effects.distortion();\n    var metalAutoWah = effects.autoWah();\n    var metalFreeverb = effects.freeverb();\n    var basePart = parts.basePart();\n    var partSynth = synths.polySynth();\n    metalSynth.chain(metalDistortion, metalAutoWah, metalFreeverb, Tone.Master);\n    baseSynth.toMaster(); //loops\n\n    var part = new Tone.Part(function (time, value) {\n      basePart.triggerAttackRelease(value.note, '8n', time, value.velocity);\n    }, [({\n      time: '4:1:0',\n      note: 'E#2',\n      velocity: 1\n    }, {\n      time: '5:1:0',\n      note: 'B2',\n      velocity: 1\n    }, {\n      time: '5:3:0',\n      note: 'E#3',\n      velocity: 1\n    }, {\n      time: '10:1:0',\n      note: 'B#3',\n      velocity: 1\n    }, {\n      time: '11:1:0',\n      note: 'E#2',\n      velocity: 0.5\n    }, {\n      time: '17:1:0',\n      note: 'B#2',\n      velocity: 1\n    }, {\n      time: '18:1:0',\n      note: 'B2',\n      velocity: 1\n    }, {\n      time: '18:3:0',\n      note: 'E#4',\n      velocity: 1\n    }, {\n      time: '24:3:0',\n      note: 'B#4',\n      velocity: 1\n    })]).start(0);\n    var loop1 = new Tone.Loop(function (time) {\n      metalSynth.triggerAttackRelease();\n    });\n    var loop2 = new Tone.Loop(function (time) {\n      baseSynth.triggerAttackRelease('E2', '32n', time);\n    });\n    var loop3 = new Tone.Loop(function (time, note) {\n      basePart.triggerAttackRelease(value.note, '8n', time, value.velocity);\n    }, [({\n      time: '4:1:0',\n      note: 'E#2',\n      velocity: 1\n    }, {\n      time: '5:1:0',\n      note: 'B2',\n      velocity: 1\n    }, {\n      time: '5:3:0',\n      note: 'E#3',\n      velocity: 1\n    }, {\n      time: '10:1:0',\n      note: 'B#3',\n      velocity: 1\n    }, {\n      time: '11:1:0',\n      note: 'E#2',\n      velocity: 0.5\n    }, {\n      time: '17:1:0',\n      note: 'B#2',\n      velocity: 1\n    }, {\n      time: '18:1:0',\n      note: 'B2',\n      velocity: 1\n    }, {\n      time: '18:3:0',\n      note: 'E#4',\n      velocity: 1\n    }, {\n      time: '24:3:0',\n      note: 'B#4',\n      velocity: 1\n    })]);\n    _this.state = {\n      lastChange: Date.now(),\n      partSynth: partSynth,\n      basePart: basePart,\n      baseSynth: baseSynth,\n      metalSynth: metalSynth,\n      metalAutoWah: {\n        name: 'metalAutoWah',\n        effect: metalAutoWah,\n        wet: defaultWetValue,\n        on: false\n      },\n      metalDistortion: {\n        name: 'metalDistortion',\n        effect: metalDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      metalFreeverb: {\n        name: 'metalFreeverb',\n        effect: metalFreeverb,\n        wet: defaultWetValue,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      part: {\n        part: parts.basePart(),\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), 'togglePart', 'toggleLoop', 'changeSynthValue', 'toggleEffect', 'changeEffectWetValue', 'changeEffectValue');\n\n    Tone.Transport.bpm.value = 115;\n    Tone.Transport.start();\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"togglePart\",\n    value: function togglePart(partName) {\n      var _this$state$partName = this.state[partName],\n          part = _this$state$partName.part,\n          on = _this$state$partName.on;\n\n      if (on == true) {\n        part.stop();\n      } else {\n        part.at('1m');\n        part.start(0);\n        part.loop = true;\n        part.loopEnd = '8m';\n      }\n\n      this.setState(_defineProperty({}, \"\".concat(partName), {\n        part: part,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"changeSynthValue\",\n    value: function changeSynthValue(synthName, effectName, value) {\n      var synth = this.state[synthName];\n      var envelope = synth.envelope;\n      envelope[effectName] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        oscillator: synth.oscillator,\n        envelope: envelope\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          name = _this$state$effectNam.name,\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, effectProperty, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          name = _this$state$effectNam2.name,\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect[effectProperty].value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectValue\",\n    value: function changeEffectValue(effectName, effectProperty, value) {\n      var _this$state$effectNam3 = this.state[effectName],\n          name = _this$state$effectNam3.name,\n          effect = _this$state$effectNam3.effect,\n          wet = _this$state$effectNam3.wet,\n          on = _this$state$effectNam3.on;\n\n      if (effectProperty == 'order') {\n        value = Math.round(value);\n      }\n\n      effect[effectProperty] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        name: name,\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          partSynth = _this$state.partSynth,\n          basePart = _this$state.basePart,\n          baseSynth = _this$state.baseSynth,\n          metalSynth = _this$state.metalSynth,\n          metalAutoWah = _this$state.metalAutoWah,\n          metalDistortion = _this$state.metalDistortion,\n          metalFreeverb = _this$state.metalFreeverb,\n          loop1 = _this$state.loop1,\n          loop2 = _this$state.loop2,\n          loop3 = _this$state.loop3,\n          part = _this$state.part;\n      var togglePart = this.togglePart,\n          _toggleEffect = this.toggleEffect,\n          toggleLoop = this.toggleLoop,\n          changeSynthValue = this.changeSynthValue,\n          changeEffectWetValue = this.changeEffectWetValue,\n          changeEffectValue = this.changeEffectValue,\n          changeEffectFilterValue = this.changeEffectFilterValue;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"yellowSynth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(MetalSynth, {\n        synth: \"metalSynth\",\n        instrument: metalSynth,\n        on: loop1.on,\n        togglePlay: function togglePlay() {\n          return toggleLoop('loop1');\n        },\n        changeSynthValue: this.changeSynthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"innerContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, metalDistortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('metalDistortion');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"innerContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(AutoWah, Object.assign({}, metalAutoWah, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('metalAutoWah');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"innerContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(Freeverb, Object.assign({}, metalFreeverb, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('metalFreeverb');\n        },\n        changeEffectWetValue: changeEffectWetValue,\n        changeEffectValue: changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"redSynth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(BaseSynth, {\n        synth: \"baseSynth\",\n        instrument: baseSynth,\n        on: loop2.on,\n        togglePlay: function togglePlay() {\n          return toggleLoop('loop2');\n        },\n        changeSynthValue: this.changeSynthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"whiteSynth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(PartSynth, {\n        synth: \"basePart\",\n        instrument: basePart,\n        on: loop3.on,\n        togglePlay: function togglePlay() {\n          return toggleLoop('loop3');\n        },\n        changeSynthValue: this.changeSynthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"darkSynth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(PolySynth, {\n        synth: \"partSynth\",\n        instrument: partSynth,\n        on: part.on,\n        togglePlay: function togglePlay() {\n          return togglePart('part');\n        },\n        changeSynthValue: changeSynthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/oxana/thereminvox/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","effects","parts","synths","AutoFilter","AutoPanner","AutoWah","BitCrusher","Chebyshev","Chorus","Distortion","FeedbackDelay","FeedbackEffect","Freeverb","JcReverb","Phaser","PingPongDelay","PitchShift","Reverb","StereoWidener","Tremolo","Vibrato","MetalSynth","BaseSynth","PartSynth","PolySynth","Synth","props","defaultWetValue","baseSynth","metalSynth","metalDistortion","distortion","metalAutoWah","autoWah","metalFreeverb","freeverb","basePart","partSynth","polySynth","chain","Master","toMaster","part","Part","time","value","triggerAttackRelease","note","velocity","start","loop1","Loop","loop2","loop3","state","lastChange","Date","now","name","effect","wet","on","loop","bindAll","Transport","bpm","loopName","stop","setState","partName","at","loopEnd","synthName","effectName","synth","envelope","oscillator","effectProperty","Math","round","togglePart","toggleEffect","toggleLoop","changeSynthValue","changeEffectWetValue","changeEffectValue","changeEffectFilterValue","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,cAAP;AAEA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,gBAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AAEA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;;IAEqBC,K;;;;;AACnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AAEA,QAAMC,eAAe,GAAG,GAAxB;AAEA,QAAIC,SAAS,GAAG1B,MAAM,CAAC0B,SAAP,EAAhB;AAEA,QAAIC,UAAU,GAAG3B,MAAM,CAAC2B,UAAP,EAAjB;AACA,QAAIC,eAAe,GAAG9B,OAAO,CAAC+B,UAAR,EAAtB;AACA,QAAIC,YAAY,GAAGhC,OAAO,CAACiC,OAAR,EAAnB;AACA,QAAIC,aAAa,GAAGlC,OAAO,CAACmC,QAAR,EAApB;AAEA,QAAIC,QAAQ,GAAGnC,KAAK,CAACmC,QAAN,EAAf;AAEA,QAAIC,SAAS,GAAGnC,MAAM,CAACoC,SAAP,EAAhB;AAEAT,IAAAA,UAAU,CAACU,KAAX,CAAiBT,eAAjB,EAAkCE,YAAlC,EAAgDE,aAAhD,EAA+DnC,IAAI,CAACyC,MAApE;AACAZ,IAAAA,SAAS,CAACa,QAAV,GAjBiB,CAmBjB;;AAEA,QAAIC,IAAI,GAAG,IAAI3C,IAAI,CAAC4C,IAAT,CACT,UAASC,IAAT,EAAeC,KAAf,EAAsB;AACpBT,MAAAA,QAAQ,CAACU,oBAAT,CAA8BD,KAAK,CAACE,IAApC,EAA0C,IAA1C,EAAgDH,IAAhD,EAAsDC,KAAK,CAACG,QAA5D;AACD,KAHQ,EAIT,EACG;AACCJ,MAAAA,IAAI,EAAE,OADP;AAECG,MAAAA,IAAI,EAAE,KAFP;AAGCC,MAAAA,QAAQ,EAAE;AAHX,OAKD;AACEJ,MAAAA,IAAI,EAAE,OADR;AAEEG,MAAAA,IAAI,EAAE,IAFR;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KALC,EAUD;AACEJ,MAAAA,IAAI,EAAE,OADR;AAEEG,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KAVC,EAeD;AACEJ,MAAAA,IAAI,EAAE,QADR;AAEEG,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KAfC,EAoBD;AACEJ,MAAAA,IAAI,EAAE,QADR;AAEEG,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KApBC,EAyBD;AACEJ,MAAAA,IAAI,EAAE,QADR;AAEEG,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KAzBC,EA8BD;AACEJ,MAAAA,IAAI,EAAE,QADR;AAEEG,MAAAA,IAAI,EAAE,IAFR;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KA9BC,EAmCD;AACEJ,MAAAA,IAAI,EAAE,QADR;AAEEG,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KAnCC,EAwCD;AACEJ,MAAAA,IAAI,EAAE,QADR;AAEEG,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KAzCF,EAJS,EAmDTC,KAnDS,CAmDH,CAnDG,CAAX;AAqDA,QAAIC,KAAK,GAAG,IAAInD,IAAI,CAACoD,IAAT,CAAc,UAASP,IAAT,EAAe;AACvCf,MAAAA,UAAU,CAACiB,oBAAX;AACD,KAFW,CAAZ;AAIA,QAAIM,KAAK,GAAG,IAAIrD,IAAI,CAACoD,IAAT,CAAc,UAASP,IAAT,EAAe;AACvChB,MAAAA,SAAS,CAACkB,oBAAV,CAA+B,IAA/B,EAAqC,KAArC,EAA4CF,IAA5C;AACD,KAFW,CAAZ;AAIA,QAAIS,KAAK,GAAG,IAAItD,IAAI,CAACoD,IAAT,CACV,UAASP,IAAT,EAAeG,IAAf,EAAqB;AACnBX,MAAAA,QAAQ,CAACU,oBAAT,CAA8BD,KAAK,CAACE,IAApC,EAA0C,IAA1C,EAAgDH,IAAhD,EAAsDC,KAAK,CAACG,QAA5D;AACD,KAHS,EAIV,EACG;AACCJ,MAAAA,IAAI,EAAE,OADP;AAECG,MAAAA,IAAI,EAAE,KAFP;AAGCC,MAAAA,QAAQ,EAAE;AAHX,OAKD;AACEJ,MAAAA,IAAI,EAAE,OADR;AAEEG,MAAAA,IAAI,EAAE,IAFR;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KALC,EAUD;AACEJ,MAAAA,IAAI,EAAE,OADR;AAEEG,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KAVC,EAeD;AACEJ,MAAAA,IAAI,EAAE,QADR;AAEEG,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KAfC,EAoBD;AACEJ,MAAAA,IAAI,EAAE,QADR;AAEEG,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KApBC,EAyBD;AACEJ,MAAAA,IAAI,EAAE,QADR;AAEEG,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KAzBC,EA8BD;AACEJ,MAAAA,IAAI,EAAE,QADR;AAEEG,MAAAA,IAAI,EAAE,IAFR;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KA9BC,EAmCD;AACEJ,MAAAA,IAAI,EAAE,QADR;AAEEG,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KAnCC,EAwCD;AACEJ,MAAAA,IAAI,EAAE,QADR;AAEEG,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KAzCF,EAJU,CAAZ;AAqDA,UAAKM,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAEC,IAAI,CAACC,GAAL,EADD;AAEXpB,MAAAA,SAAS,EAATA,SAFW;AAGXD,MAAAA,QAAQ,EAARA,QAHW;AAIXR,MAAAA,SAAS,EAATA,SAJW;AAKXC,MAAAA,UAAU,EAAVA,UALW;AAMXG,MAAAA,YAAY,EAAE;AACZ0B,QAAAA,IAAI,EAAE,cADM;AAEZC,QAAAA,MAAM,EAAE3B,YAFI;AAGZ4B,QAAAA,GAAG,EAAEjC,eAHO;AAIZkC,QAAAA,EAAE,EAAE;AAJQ,OANH;AAYX/B,MAAAA,eAAe,EAAE;AACf4B,QAAAA,IAAI,EAAE,iBADS;AAEfC,QAAAA,MAAM,EAAE7B,eAFO;AAGf8B,QAAAA,GAAG,EAAEjC,eAHU;AAIfkC,QAAAA,EAAE,EAAE;AAJW,OAZN;AAkBX3B,MAAAA,aAAa,EAAE;AACbwB,QAAAA,IAAI,EAAE,eADO;AAEbC,QAAAA,MAAM,EAAEzB,aAFK;AAGb0B,QAAAA,GAAG,EAAEjC,eAHQ;AAIbkC,QAAAA,EAAE,EAAE;AAJS,OAlBJ;AAwBXX,MAAAA,KAAK,EAAE;AACLY,QAAAA,IAAI,EAAEZ,KADD;AAELW,QAAAA,EAAE,EAAE;AAFC,OAxBI;AA4BXT,MAAAA,KAAK,EAAE;AACLU,QAAAA,IAAI,EAAEV,KADD;AAELS,QAAAA,EAAE,EAAE;AAFC,OA5BI;AAgCXR,MAAAA,KAAK,EAAE;AACLS,QAAAA,IAAI,EAAET,KADD;AAELQ,QAAAA,EAAE,EAAE;AAFC,OAhCI;AAoCXnB,MAAAA,IAAI,EAAE;AACJA,QAAAA,IAAI,EAAEzC,KAAK,CAACmC,QAAN,EADF;AAEJyB,QAAAA,EAAE,EAAE;AAFA;AApCK,KAAb;;AA0CAhE,IAAAA,CAAC,CAACkE,OAAF,gCAEE,YAFF,EAGE,YAHF,EAIE,kBAJF,EAKE,cALF,EAME,sBANF,EAOE,mBAPF;;AAUAhE,IAAAA,IAAI,CAACiE,SAAL,CAAeC,GAAf,CAAmBpB,KAAnB,GAA2B,GAA3B;AACA9C,IAAAA,IAAI,CAACiE,SAAL,CAAef,KAAf;AA5LiB;AA6LlB;;;;+BAEUiB,Q,EAAU;AAAA,iCACA,KAAKZ,KAAL,CAAWY,QAAX,CADA;AAAA,UACbJ,IADa,wBACbA,IADa;AAAA,UACPD,EADO,wBACPA,EADO;AAGnBA,MAAAA,EAAE,IAAI,IAAN,GAAaC,IAAI,CAACK,IAAL,EAAb,GAA2BL,IAAI,CAACb,KAAL,CAAW,IAAX,CAA3B;AAEA,WAAKmB,QAAL,+BACMF,QADN,GACmB;AACfJ,QAAAA,IAAI,EAAEA,IADS;AAEfD,QAAAA,EAAE,EAAE,CAACA;AAFU,OADnB;AAMD;;;+BAEUQ,Q,EAAU;AAAA,iCACA,KAAKf,KAAL,CAAWe,QAAX,CADA;AAAA,UACb3B,IADa,wBACbA,IADa;AAAA,UACPmB,EADO,wBACPA,EADO;;AAGnB,UAAIA,EAAE,IAAI,IAAV,EAAgB;AACdnB,QAAAA,IAAI,CAACyB,IAAL;AACD,OAFD,MAEO;AACLzB,QAAAA,IAAI,CAAC4B,EAAL,CAAQ,IAAR;AACA5B,QAAAA,IAAI,CAACO,KAAL,CAAW,CAAX;AACAP,QAAAA,IAAI,CAACoB,IAAL,GAAY,IAAZ;AACApB,QAAAA,IAAI,CAAC6B,OAAL,GAAe,IAAf;AACD;;AAED,WAAKH,QAAL,+BACMC,QADN,GACmB;AACf3B,QAAAA,IAAI,EAAEA,IADS;AAEfmB,QAAAA,EAAE,EAAE,CAACA;AAFU,OADnB;AAMD;;;qCAEgBW,S,EAAWC,U,EAAY5B,K,EAAO;AAC7C,UAAI6B,KAAK,GAAG,KAAKpB,KAAL,CAAWkB,SAAX,CAAZ;AACA,UAAIG,QAAQ,GAAGD,KAAK,CAACC,QAArB;AACAA,MAAAA,QAAQ,CAACF,UAAD,CAAR,GAAuB5B,KAAvB;AAEA,WAAKuB,QAAL,+BACMK,UADN,GACqB;AACjBG,QAAAA,UAAU,EAAEF,KAAK,CAACE,UADD;AAEjBD,QAAAA,QAAQ,EAAEA;AAFO,OADrB;AAMD;;;iCAEYF,U,EAAY;AAAA,kCACS,KAAKnB,KAAL,CAAWmB,UAAX,CADT;AAAA,UACjBf,IADiB,yBACjBA,IADiB;AAAA,UACXC,MADW,yBACXA,MADW;AAAA,UACHC,GADG,yBACHA,GADG;AAAA,UACEC,EADF,yBACEA,EADF;AAGvBF,MAAAA,MAAM,CAACC,GAAP,CAAWf,KAAX,GAAmBgB,EAAE,IAAI,IAAN,GAAa,CAAb,GAAiBD,GAApC;AACAC,MAAAA,EAAE,GAAG,CAACA,EAAN;AAEA,WAAKO,QAAL,+BACMK,UADN,GACqB;AACjBf,QAAAA,IAAI,EAAJA,IADiB;AAEjBC,QAAAA,MAAM,EAANA,MAFiB;AAGjBC,QAAAA,GAAG,EAAHA,GAHiB;AAIjBC,QAAAA,EAAE,EAAFA;AAJiB,OADrB;AAQD;;;yCAEoBY,U,EAAYI,c,EAAgBhC,K,EAAO;AAAA,mCACtB,KAAKS,KAAL,CAAWmB,UAAX,CADsB;AAAA,UAChDf,IADgD,0BAChDA,IADgD;AAAA,UAC1CC,MAD0C,0BAC1CA,MAD0C;AAAA,UAClCC,GADkC,0BAClCA,GADkC;AAAA,UAC7BC,EAD6B,0BAC7BA,EAD6B;AAGtDF,MAAAA,MAAM,CAACkB,cAAD,CAAN,CAAuBhC,KAAvB,GAA+BgB,EAAE,IAAI,IAAN,GAAahB,KAAb,GAAqB,CAApD;AACAe,MAAAA,GAAG,GAAGf,KAAN;AAEA,WAAKuB,QAAL,+BACMK,UADN,GACqB;AACjBf,QAAAA,IAAI,EAAJA,IADiB;AAEjBC,QAAAA,MAAM,EAANA,MAFiB;AAGjBC,QAAAA,GAAG,EAAHA,GAHiB;AAIjBC,QAAAA,EAAE,EAAFA;AAJiB,OADrB;AAQD;;;sCACiBY,U,EAAYI,c,EAAgBhC,K,EAAO;AAAA,mCACnB,KAAKS,KAAL,CAAWmB,UAAX,CADmB;AAAA,UAC7Cf,IAD6C,0BAC7CA,IAD6C;AAAA,UACvCC,MADuC,0BACvCA,MADuC;AAAA,UAC/BC,GAD+B,0BAC/BA,GAD+B;AAAA,UAC1BC,EAD0B,0BAC1BA,EAD0B;;AAGnD,UAAIgB,cAAc,IAAI,OAAtB,EAA+B;AAC7BhC,QAAAA,KAAK,GAAGiC,IAAI,CAACC,KAAL,CAAWlC,KAAX,CAAR;AACD;;AAEDc,MAAAA,MAAM,CAACkB,cAAD,CAAN,GAAyBhC,KAAzB;AAEA,WAAKuB,QAAL,+BACMK,UADN,GACqB;AACjBf,QAAAA,IAAI,EAAJA,IADiB;AAEjBC,QAAAA,MAAM,EAANA,MAFiB;AAGjBC,QAAAA,GAAG,EAAHA,GAHiB;AAIjBC,QAAAA,EAAE,EAAFA;AAJiB,OADrB;AAQD;;;6BAEQ;AAAA,wBAaH,KAAKP,KAbF;AAAA,UAELjB,SAFK,eAELA,SAFK;AAAA,UAGLD,QAHK,eAGLA,QAHK;AAAA,UAILR,SAJK,eAILA,SAJK;AAAA,UAKLC,UALK,eAKLA,UALK;AAAA,UAMLG,YANK,eAMLA,YANK;AAAA,UAOLF,eAPK,eAOLA,eAPK;AAAA,UAQLI,aARK,eAQLA,aARK;AAAA,UASLgB,KATK,eASLA,KATK;AAAA,UAULE,KAVK,eAULA,KAVK;AAAA,UAWLC,KAXK,eAWLA,KAXK;AAAA,UAYLX,IAZK,eAYLA,IAZK;AAAA,UAgBLsC,UAhBK,GAuBH,IAvBG,CAgBLA,UAhBK;AAAA,UAiBLC,aAjBK,GAuBH,IAvBG,CAiBLA,YAjBK;AAAA,UAkBLC,UAlBK,GAuBH,IAvBG,CAkBLA,UAlBK;AAAA,UAmBLC,gBAnBK,GAuBH,IAvBG,CAmBLA,gBAnBK;AAAA,UAoBLC,oBApBK,GAuBH,IAvBG,CAoBLA,oBApBK;AAAA,UAqBLC,iBArBK,GAuBH,IAvBG,CAqBLA,iBArBK;AAAA,UAsBLC,uBAtBK,GAuBH,IAvBG,CAsBLA,uBAtBK;AAyBP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,UAAU,EAAEzD,UAFd;AAGE,QAAA,EAAE,EAAEqB,KAAK,CAACW,EAHZ;AAIE,QAAA,UAAU,EAAE;AAAA,iBAAMqB,UAAU,CAAC,OAAD,CAAhB;AAAA,SAJd;AAKE,QAAA,gBAAgB,EAAE,KAAKC,gBALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD,oBACMrD,eADN;AAEE,QAAA,YAAY,EAAE;AAAA,iBAAMmD,aAAY,CAAC,iBAAD,CAAlB;AAAA,SAFhB;AAGE,QAAA,oBAAoB,EAAEG,oBAHxB;AAIE,QAAA,iBAAiB,EAAEC,iBAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CARF,EAgBE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD,oBACMrD,YADN;AAEE,QAAA,YAAY,EAAE;AAAA,iBAAMiD,aAAY,CAAC,cAAD,CAAlB;AAAA,SAFhB;AAGE,QAAA,oBAAoB,EAAEG,oBAHxB;AAIE,QAAA,iBAAiB,EAAEC,iBAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CAhBF,EAwBE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,oBACMnD,aADN;AAEE,QAAA,YAAY,EAAE;AAAA,iBAAM+C,aAAY,CAAC,eAAD,CAAlB;AAAA,SAFhB;AAGE,QAAA,oBAAoB,EAAEG,oBAHxB;AAIE,QAAA,iBAAiB,EAAEC,iBAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CAxBF,CADF,EAkCE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,UAAU,EAAEzD,SAFd;AAGE,QAAA,EAAE,EAAEwB,KAAK,CAACS,EAHZ;AAIE,QAAA,UAAU,EAAE;AAAA,iBAAMqB,UAAU,CAAC,OAAD,CAAhB;AAAA,SAJd;AAKE,QAAA,gBAAgB,EAAE,KAAKC,gBALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAlCF,EA4CE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAC,UADR;AAEE,QAAA,UAAU,EAAE/C,QAFd;AAGE,QAAA,EAAE,EAAEiB,KAAK,CAACQ,EAHZ;AAIE,QAAA,UAAU,EAAE;AAAA,iBAAMqB,UAAU,CAAC,OAAD,CAAhB;AAAA,SAJd;AAKE,QAAA,gBAAgB,EAAE,KAAKC,gBALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA5CF,EAqDE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,UAAU,EAAE9C,SAFd;AAGE,QAAA,EAAE,EAAEK,IAAI,CAACmB,EAHX;AAIE,QAAA,UAAU,EAAE;AAAA,iBAAMmB,UAAU,CAAC,MAAD,CAAhB;AAAA,SAJd;AAKE,QAAA,gBAAgB,EAAEG,gBALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CArDF,CADF;AAiED;;;;EA1XgCrF,KAAK,CAACyF,S;;SAApB9D,K","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\nimport 'whatwg-fetch'\n\nimport * as effects from '../tunes/effects'\nimport * as parts from '../tunes/parts'\nimport * as synths from '../tunes/synths'\n\nimport AutoFilter from '../components/effects/AutoFilter'\nimport AutoPanner from '../components/effects/AutoPanner'\nimport AutoWah from '../components/effects/AutoWah'\nimport BitCrusher from '../components/effects/BitCrusher'\nimport Chebyshev from '../components/effects/Chebyshev'\nimport Chorus from '../components/effects/Chorus'\nimport Distortion from '../components/effects/Distortion'\nimport FeedbackDelay from '../components/effects/FeedbackDelay'\nimport FeedbackEffect from '../components/effects/FeedbackEffect'\nimport Freeverb from '../components/effects/Freeverb'\nimport JcReverb from '../components/effects/JcReverb'\nimport Phaser from '../components/effects/Phaser'\nimport PingPongDelay from '../components/effects/PingPongDelay'\nimport PitchShift from '../components/effects/PitchShift'\nimport Reverb from '../components/effects/Reverb'\nimport StereoWidener from '../components/effects/StereoWidener'\nimport Tremolo from '../components/effects/Tremolo'\nimport Vibrato from '../components/effects/Vibrato'\n\nimport MetalSynth from '../components/synths/MetalSynth'\nimport BaseSynth from '../components/synths/BaseSynth'\nimport PartSynth from '../components/synths/PartSynth'\nimport PolySynth from '../components/synths/PolySynth'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    const defaultWetValue = 0.8\n\n    let baseSynth = synths.baseSynth()\n\n    let metalSynth = synths.metalSynth()\n    let metalDistortion = effects.distortion()\n    let metalAutoWah = effects.autoWah()\n    let metalFreeverb = effects.freeverb()\n\n    let basePart = parts.basePart()\n\n    let partSynth = synths.polySynth()\n\n    metalSynth.chain(metalDistortion, metalAutoWah, metalFreeverb, Tone.Master)\n    baseSynth.toMaster()\n\n    //loops\n\n    let part = new Tone.Part(\n      function(time, value) {\n        basePart.triggerAttackRelease(value.note, '8n', time, value.velocity)\n      },\n      [\n        ({\n          time: '4:1:0',\n          note: 'E#2',\n          velocity: 1\n        },\n        {\n          time: '5:1:0',\n          note: 'B2',\n          velocity: 1\n        },\n        {\n          time: '5:3:0',\n          note: 'E#3',\n          velocity: 1\n        },\n        {\n          time: '10:1:0',\n          note: 'B#3',\n          velocity: 1\n        },\n        {\n          time: '11:1:0',\n          note: 'E#2',\n          velocity: 0.5\n        },\n        {\n          time: '17:1:0',\n          note: 'B#2',\n          velocity: 1\n        },\n        {\n          time: '18:1:0',\n          note: 'B2',\n          velocity: 1\n        },\n        {\n          time: '18:3:0',\n          note: 'E#4',\n          velocity: 1\n        },\n        {\n          time: '24:3:0',\n          note: 'B#4',\n          velocity: 1\n        })\n      ]\n    ).start(0)\n\n    let loop1 = new Tone.Loop(function(time) {\n      metalSynth.triggerAttackRelease()\n    })\n\n    let loop2 = new Tone.Loop(function(time) {\n      baseSynth.triggerAttackRelease('E2', '32n', time)\n    })\n\n    let loop3 = new Tone.Loop(\n      function(time, note) {\n        basePart.triggerAttackRelease(value.note, '8n', time, value.velocity)\n      },\n      [\n        ({\n          time: '4:1:0',\n          note: 'E#2',\n          velocity: 1\n        },\n        {\n          time: '5:1:0',\n          note: 'B2',\n          velocity: 1\n        },\n        {\n          time: '5:3:0',\n          note: 'E#3',\n          velocity: 1\n        },\n        {\n          time: '10:1:0',\n          note: 'B#3',\n          velocity: 1\n        },\n        {\n          time: '11:1:0',\n          note: 'E#2',\n          velocity: 0.5\n        },\n        {\n          time: '17:1:0',\n          note: 'B#2',\n          velocity: 1\n        },\n        {\n          time: '18:1:0',\n          note: 'B2',\n          velocity: 1\n        },\n        {\n          time: '18:3:0',\n          note: 'E#4',\n          velocity: 1\n        },\n        {\n          time: '24:3:0',\n          note: 'B#4',\n          velocity: 1\n        })\n      ]\n    )\n\n    this.state = {\n      lastChange: Date.now(),\n      partSynth,\n      basePart,\n      baseSynth,\n      metalSynth,\n      metalAutoWah: {\n        name: 'metalAutoWah',\n        effect: metalAutoWah,\n        wet: defaultWetValue,\n        on: false\n      },\n      metalDistortion: {\n        name: 'metalDistortion',\n        effect: metalDistortion,\n        wet: defaultWetValue,\n        on: false\n      },\n      metalFreeverb: {\n        name: 'metalFreeverb',\n        effect: metalFreeverb,\n        wet: defaultWetValue,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      part: {\n        part: parts.basePart(),\n        on: false\n      }\n    }\n\n    _.bindAll(\n      this,\n      'togglePart',\n      'toggleLoop',\n      'changeSynthValue',\n      'toggleEffect',\n      'changeEffectWetValue',\n      'changeEffectValue'\n    )\n\n    Tone.Transport.bpm.value = 115\n    Tone.Transport.start()\n  }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n  }\n\n  togglePart(partName) {\n    let { part, on } = this.state[partName]\n\n    if (on == true) {\n      part.stop()\n    } else {\n      part.at('1m')\n      part.start(0)\n      part.loop = true\n      part.loopEnd = '8m'\n    }\n\n    this.setState({\n      [`${partName}`]: {\n        part: part,\n        on: !on\n      }\n    })\n  }\n\n  changeSynthValue(synthName, effectName, value) {\n    let synth = this.state[synthName]\n    let envelope = synth.envelope\n    envelope[effectName] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        oscillator: synth.oscillator,\n        envelope: envelope\n      }\n    })\n  }\n\n  toggleEffect(effectName) {\n    let { name, effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, effectProperty, value) {\n    let { name, effect, wet, on } = this.state[effectName]\n\n    effect[effectProperty].value = on == true ? value : 0\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n  changeEffectValue(effectName, effectProperty, value) {\n    let { name, effect, wet, on } = this.state[effectName]\n\n    if (effectProperty == 'order') {\n      value = Math.round(value)\n    }\n\n    effect[effectProperty] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        name,\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  render() {\n    let {\n      partSynth,\n      basePart,\n      baseSynth,\n      metalSynth,\n      metalAutoWah,\n      metalDistortion,\n      metalFreeverb,\n      loop1,\n      loop2,\n      loop3,\n      part\n    } = this.state\n\n    let {\n      togglePart,\n      toggleEffect,\n      toggleLoop,\n      changeSynthValue,\n      changeEffectWetValue,\n      changeEffectValue,\n      changeEffectFilterValue\n    } = this\n\n    return (\n      <div className=\"container\">\n        <div className=\"yellowSynth\">\n          <MetalSynth\n            synth=\"metalSynth\"\n            instrument={metalSynth}\n            on={loop1.on}\n            togglePlay={() => toggleLoop('loop1')}\n            changeSynthValue={this.changeSynthValue}\n          />\n          <div className=\"innerContainer\">\n            <Distortion\n              {...metalDistortion}\n              toggleEffect={() => toggleEffect('metalDistortion')}\n              changeEffectWetValue={changeEffectWetValue}\n              changeEffectValue={changeEffectValue}\n            />\n          </div>\n          <div className=\"innerContainer\">\n            <AutoWah\n              {...metalAutoWah}\n              toggleEffect={() => toggleEffect('metalAutoWah')}\n              changeEffectWetValue={changeEffectWetValue}\n              changeEffectValue={changeEffectValue}\n            />\n          </div>\n          <div className=\"innerContainer\">\n            <Freeverb\n              {...metalFreeverb}\n              toggleEffect={() => toggleEffect('metalFreeverb')}\n              changeEffectWetValue={changeEffectWetValue}\n              changeEffectValue={changeEffectValue}\n            />\n          </div>\n        </div>\n        <div className=\"redSynth\">\n          <BaseSynth\n            synth=\"baseSynth\"\n            instrument={baseSynth}\n            on={loop2.on}\n            togglePlay={() => toggleLoop('loop2')}\n            changeSynthValue={this.changeSynthValue}\n          />\n        </div>\n\n        <div className=\"whiteSynth\">\n          <PartSynth\n            synth=\"basePart\"\n            instrument={basePart}\n            on={loop3.on}\n            togglePlay={() => toggleLoop('loop3')}\n            changeSynthValue={this.changeSynthValue}\n          />\n        </div>\n        <div className=\"darkSynth\">\n          <PolySynth\n            synth=\"partSynth\"\n            instrument={partSynth}\n            on={part.on}\n            togglePlay={() => togglePart('part')}\n            changeSynthValue={changeSynthValue}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}